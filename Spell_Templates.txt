Arcane Dart:
[REQ]
resource(self, MP, 2)
resource(self, AP, 5)
inRange(self, target, 8)
[RES]
modifyResource(self, MP, -2)
modifyResource(self, AP, -5)
[HIT]
calcHit(self, target, "Magical")
[ACT]
modifyResource(target, HP, 0-scale(calcDamage(self, target, 2, 4, Arcane, HIT), 0.03, Spellpower))

Arcane Warding:
[REQ]
resource(self, MP, 7)
resource(self, AP, 9)
[RES]
modifyResource(self, MP, -7)
modifyResource(self, AP, -9)
[HIT]
1
[ACT]
addStatus(self, "Arcane Ward", scale(3, 0.1, Spellpower, 6), scale(5, 0.01, Spellpower))

Mystic Shield:
[REQ]
resource(self, MP, 15)
resource(self, AP, 12)
!onCooldown(self, "Mystic Shield")
[RES]
modifyResource(self, MP, -15)
modifyResource(self, AP, -12)
applyCooldown(self, "Mystic Shield", 4)
[HIT]
1
[ACT]
addStatus(self, "Mystic Shield", 5, scale(10, 0.06, Spellpower))

Flicker of Life:
[REQ]
resource(self, MP, 15)
resource(self, AP, 9)
inRange(self, target, 6)
[RES]
modifyResource(self, MP, -15)
modifyResource(self, AP, -9)
[HIT]
1
[ACT]
modifyResource(target, HP, scale(roll(10, 20), 0.02, Spellpower))

Stone Guard:
[REQ]
resource(self, MP, 15)
resource(self, AP, 9)
inRange(self, target, 4)
[HIT]
1
[ACT]
modifyResource(self, MP, -15)
modifyResource(self, AP, -9)
addStatus(target, "Stone Guard", scale(4, 0.05, Spellpower, 6), scale(10, 0.008, Spellpower))

Singe:
[REQ]
resource(self, MP, 6)
resource(self, AP, 7)
inRange(self, target, 7)
[RES]
modifyResource(self, MP, -6)
modifyResource(self, AP, -7)
[HIT]
calcHit(self, target, "Magical")
[ACT]
modifyResource(target, HP, 0-scale(calcDamage(self, target, 2, 9, Fire, HIT, partial = 0.5, critical = 1.2), 0.05, Spellpower))

Chill:
[REQ]
resource(self, MP, 10)
resource(self, AP, 6)
inRange(self, target, 6)
[RES]
modifyResource(self, MP, -10)
modifyResource(self, AP, -6)
[HIT]
calcHit(self, target, "Magical")
[ACT]
modifyResource(target, HP, 0-scale(calcDamage(self, target, 1, 12, Cold, HIT), 0.01, Spellpower))
addStatus(target, "Chill", 2, scale(5, 0.012, Spellpower), FREQUENT)

Shock:
[REQ]
resource(self, MP, 13)
resource(self, AP, 7)
inRange(self, target, 2)
!onCooldown(self, "Shock")
[RES]
modifyResource(self, MP, -13)
modifyResource(self, AP, -6)
[HIT]
calcHit(self, target, "Magical")
[ACT]
modifyResource(target, HP, 0 - scale(calcDamage(self, target, min=15, max=22, element=Electric, hitType=hit), 0.014, Spellpower))
applyCooldown(self, "Shock", 1)

Suggest Laziness:
[REQ]
resource(self, MP, 5)
resource(self, AP, 5)
inRange(self, target, 12)
[RES]
modifyResource(self, MP -5)
modifyResource(self, AP, -5)
[HIT]
calcHit(self, target, "Magical")
[ACT]
addStatus(target, "Suggest Laziness", 1, 0, OCCASIONAL)

Stutter:
[REQ]
resource(self, MP, 14)
resource(self, AP, 9)
inRange(self, target, 6)
[RES]
modifyResource(self, MP, -14)
modifyResource(self, AP, -9)
[HIT]
calcHit(self, target, "Magical")
[ACT]
addStatus(target, "Stutter_spell_fail", 5, 10)
addStatus(target, "Stutter_spellpower_reduction", 5, scale(5, 0.02, Spellpower))

Cloud Vision:
[REQ]
resource(self, MP, 9)
resource(self, AP, 9)
inRange(self, target, 6)
[RES]
modifyResource(self, MP, -9)
modifyResource(self, AP, -9)
[HIT]
calcHit(self, target, "Magical")
[ACT]
addStatus(target, "Cloud Vision", scale(5, 0.02, Spellpower), scale(5, 0.012, Spellpower))
addStatus(target, "Cloud Vision", scale(5, 0.02, Spellpower), scale(2.5, 0.012, Spellpower), partial = true)

Haunt:
[REQ]
resource(self, MP, 20)
resource(self, AP, 11)
inRange(self, target, 5)
!onCooldown(self, "Haunt")
[RES]
modifyResource(self, MP -20)
modifyResource(self, AP, -11)
applyCooldown(self, "Haunt", 3)
[HIT]
calcHit(self, target, "Magical")
[ACT]
modifyResource(target, HP, 0 - scale(calcDamage(self, target, min=13, max=20, element=Shadow, hitType=hit), 0.01, Spellpower))
addStatus(target, "Haunt", scale(3, 0.02, Spellpower, cap = 4), min=scale(2, 0.005, Spellpower), max=scale(8, 0.005, Spellpower))

Zone of Silence:
[REQ]
resource(self, MP, 20)
resource(self, AP, 6)
inRange(self, target, 3)
[RES]
modifyResource(self, MP, -20)
modifyResource(self, AP, -6)
[ACT]
removeTerrainStatus(terrainStatus="Zone of Silence", location=target.location)
addTerrainStatus(terrainStatus="Zone of Silence", location=target.location, duration=scale(3, 0.011, Spellpower, cap=6)) 

Blurry:
[REQ]
resource(self, MP, 6)
resource(self, AP, 3)
[RES]
modifyResource(self, MP, -6)
modifyResource(self, AP, -3)
[ACT]
addStatus(self, "Blurry", 1, scale(5, 0.02, Spellpower))

Weapon Enhance:
[REQ]
resource(self, MP, 9)
resource(self, AP, 5)
inRange(self, target, 3)
[RES]
modifyResource(self, MP, -9)
modifyResource(self, AP, -5)
[ACT]
addStatus(target, "Weapon_enhance_accuracy", scale(3, 0.03, Spellpower, cap=7), scale(3, 0.07, Spellpower))
addStatus(target, "Weapon_enhance_critical_damage", scale(3, 0.03, Spellpower, cap=7), scale(5, 0.05, Spellpower))
addStatus(target, "Weapon_enhance_armor_penetration", scale(3, 0.03, Spellpower, cap=7), scale(3, 0.07, Spellpower))
addStatus(target, "Weapon_enhance_critical_chance", scale(3, 0.03, Spellpower, cap=7), scale(1, 0.035, Spellpower))

Flaming Weapon:
[REQ]
resource(self, MP, 12)
resource(self, AP, 8)
inRange(self, target, 3)
[RES]
modifyResource(self, MP, -12)
modifyResource(self, AP, -8)
[ACT]
addStatus(target, "Flaming Weapon", scale(3, 0.03, cap=7), min=scale(1, 0.01, Spellpower), max=scale(8, 0.01, Spellpower))

Burst:
[REQ]
resource(self, MP, 12)
resource(self, AP, 9)
inRange(self, target, 8)
!onCooldown(self, "Burst")
[RES]
modifyResource(self, MP -12)
modifyResource(self, AP, -9)
applyCooldown(self, "Burst", 1)
[HIT]
getAOETargets(target, radius=1, selectMonsters=True)
calcHit(self, targetSet, "Magical")
[ACT]
modifyResource(target, HP, 0 - scale(calcDamage(self, target, min=5, max=6, element=Arcane, hitType=hit), 0.005, Spellpower))
## Apply the following to all targets
modifyResource(targetSet, HP, 0-scale(calcDamage(self, targetSet, min=5, max=6, element=Arcane, hitType=hitSet), 0.005, Spellpower))

Identification:
# Needs out of combat use...
[REQ]
resource(self, MP, 5)
resource(self, AP, 5)
[RES]
modifyResource(self, MP, -5)
modifyResource(self, AP, -5)
[ACT]
addStatus(self, "Identification", 5, 5)

Hovering Shield:
[REQ]
resource(self, MP, 8)
resource(self, AP 5)
[RES]
modifyResource(self, MP -8)
modifyResource(self, AP, -5)
[ACT]
addStatus(self, "Hovering Shield", 5, scale(12, 0.008, Spellpower))

Fright:
[REQ]
resource(self, MP, 6)
resource(self, AP, 3)
!onCooldown(self, "Fright")
inRange(self, target, 6)
[RES]
modifyResource(self, MP, -6)
modifyResource(self, AP, -3)
applyCooldown(self, "Fright", 1)
[HIT]
calcHit(self, target, "Magical")
[ACT]
addStatus(target, "Fright_shadow_adjustment", 4, 20)
addStatus(target, "Fright_attack_power_adjustment", 4, 5)

Infection:
[REQ]
resource(self, MP, 7)
resource(self, AP, 6)
inRange(self, target, 1)
[RES]
modifyResource(self, MP, -7)
modifyResource(self, AP, -6)
[HIT]
calcHit(self, target, "Magical")
calcHit(self, target, "Poison", rating=scale(35, 0.012, Spellpower))
[ACT]
addStatus(target, "Infection_damage", scale(4, 0.013, Spellpower), min=scale(7, 0.03, Spellpower), max=scale(10, 0.03, Spellpower))
addStatus(target, "Infection_tolerance_adjustment", scale(4, 0.013, Spellpower), 5)

Hands of Healing:
[REQ]
resource(self, MP, 22)
resource(self, AP, 8)
!onCooldown(self, "Hands of Healing")
inRange(self, target, 1)
[RES]
modifyResource(self, MP, -22)
modifyResource(self, AP, -8)
applyCooldown(self, "Hands of Healing", 1)
[ACT]
modifyResource(target, HP, roll(scale(20, 0.02, Spellpower), scale(40, 0.02), Spellpower))

Elemental Boon:
[REQ]
resource(self, MP, 8)
resource(self, AP, 10)
inRange(self, target, 6)
[RES]
modifyResource(self, MP, -8)
modifyResource(self, AP, -10)
[ACT]
addStatus(target, "Elemental Boon", scale(6, 0.003, Spellpower, cap=7), scale(15, 0.007, Spellpower))

Torrent:
[REQ]
resource(self, MP, 25)
resource(self, AP, 14)
inRange(self, target, 14)
!onCooldown(self, "Torrent")
[RES]
modifyResource(self, MP, -25)
modifyResource(self, AP, -14)
applyCooldown(self, "Torrent", 2)
[HIT]
getPathTargets(self.location, target.location, selectMonsters=True, selectFirstOnly=True)
calcHit(self, target, "Magical")
[ACT]
modifyResource(target, HP, 0 - scale(calcDamage(self, target, min=10, max=35, element=Cold, hitType=hit), 0.014, Spellpower))
[COND]
hit >= "normal hit"
target.size < "huge"
[ACT]
knockback( self.location, target, 5)

Lightning Bolt:
[REQ]
resource(self, MP, 32)
resource(self, AP, 8)
inRange(self, target, 6)
!onCooldown(self, "Lightning Bolt")
[RES]
modifyResource(self, MP, -32)
modifyResource(self, AP, -8)
applyCooldown(self, "Lightning Bolt", 1)
[HIT]
getPathTargets(self.location, target.location, selectMonsters=True, selectFirstOnly=False)
calcHit(self, targetSet, "Magical")
[ACT]
modifyResource(targetSet, HP, 0 - scale(calcDamage(self, target, min=5, max=33, element=Electric, hitType=hitSet, partial=0.5, critical=1.3), 0.005, Spellpower))

Suggest Cowardice:
[REQ]
resource(self, MP, 9)
resource(self, AP, 10)
inRange(self, target, 5)
targetSize(target, LARGE, smallerThan=True)
[RES]
modifyResource(self, MP -9)
modifyResource(self, AP, -10)
[HIT]
calcHit(self, target, "Magical")
[ACT]
addStatus(target, "Suggest Cowardice", 1, 0, hit=RELIABLE, partial=True)

Pit:
[REQ]
resource(self, MP, 8)
resource(self, AP, 5)
inRange(self, target, 5)
!onCooldown(self, "Pit")
[RES]
modifyResource(self, MP, -8)
modifyResource(self, AP, -5)
applyCooldown(self, "Pit", 1)
[ACT]
removeTerrainStatus(terrainStatus="Pit", location=target, boolean dispelConnectedTiles=False)
addTerrainStatus(terrainStatus="Pit", duration=4, location=target)

Smoke Screen:
[REQ]
resource(self, MP, 18)
resource(self, AP, 6)
inRange(self, target, 4)
!onCooldown(self, "Smoke Screen")
[RES]
modifyResource(self, MP, -18)
modifyResrouce(self, AP, -6)
applyCooldown(self, "Smoke Screen", 2)
[ACT]
removeTerrainStatus(terrainStatus="Smoke Screen", location=target, boolean dispelConnectedTiles=False)
addTerrainStatus(terrainStatus="Smoke Screen", duration=scale(2, 0.03, Spellpower, cap=6), location=target)

Shrink:
[REQ]
resource(self, MP, 10)
resource(self, AP, 4)
inRange(self, target, 4)
!onCooldown(self, "Shrink")
targetSize(target, SMALL, smallerThan=False)
[RES]
modifyResource(self, MP -10)
modifyResource(self, AP, -4)
applyCooldown(self, "Shrink", 2)
[ACT]
addStatus(target, "Shrink", scale(2, 0.025, Spellpower, cap=5), 10, partial=True)

Frost Weapon:
[REQ]
resource(self, MP, 12)
resource(self, AP, 8)
inRange(self, target, 3)
[RES]
modifyResource(self, MP, -12)
modifyResource(self, AP, -8)
[ACT]
addStatus(target, "Frost Weapon", scale(3, 0.03, Spellpower, cap=7), scale(roll(min=2, max=5), 0.019, Spellpower))

// Fighter Skills

Mighty Blow:
[REQ]
resource(self, AP, 9)
inRange(self, target, 1)
[RES]
modifyResource(self, AP, -9)
[HIT]
calcHit(self, target, "Physical", modifier=-5)
[ACT]
weaponAttack(self, target, hit, forceMod=1.5)

Brace:
[REQ]
resource(self, AP, 2)
[RES]
modifyResource(self, AP, -2)
[ACT]
addStatus(self, "Brace", 1, 5)
endTurn(self)

Dash:
[REQ]
resource(self, AP, 2)
!onCooldown(self, "Dash")
[RES]
modifyResource(self, AP, -2)
applyCooldown(self, "Dash", 4)
[ACT]
setMovementCost(self, 2)

Quick Strike:
[REQ]
resource(self, AP, 3)
inRange(self, target, 1)
[RES]
modifyResource(self, AP, -3)
[HIT]
calcHit(self, target, "Physical", modifier=-10)
[ACT]
weaponAttack(self, target, hit, forceMod=0.5)

Precise Blow:
[REQ]
resource(self, AP, 7)
inRange(self, target, 1)
[RES]
modifyResource(self, AP, -7)
[HIT]
calcHit(self, target, "Physical", modifier=4)
[ACT]
weaponAttack(self, target, hit)

Thrust:
[REQ]
resource(self, AP, 5)
inRange(self, target, 1)
!onCooldown(self, "Thrust")
usingWeapon(self, "Sword")
[RES]
modifyResource(self, AP -5)
applyCooldown(self, "Thrust", 1)
[HIT]
calcHit(self, target, "Physical")
[ACT]
weaponAttack(self, target, hit, elementOverride="Piercing")

Clobber:
[REQ]
resource(self, AP, 10)
inRange(self, target, 1)
usingWeapon(self, "Club")
[RES]
modifyResource(self, AP, -10)
[HIT]
calcHit(self, target, "Physical", modifier=-3)
[ACT]
weaponAttack(self, target, hit, armorPenetrationMod=5)
[COND]
targetSize(target, LARGE, smallerThan=True)
[ACT]
addStatus(target, "Stun", duration=1, chance = 0.2, hit=hit)

Wound Leg:
[REQ]
resource(self, AP, 9)
inRange(self, target, 1)
[RES]
modifyResource(self, AP, -9)
[HIT]
calcHit(self, target, "Physical", modifier=-10)
[ACT]
addStatus(target, "Wound Leg", duration=3, hit=hit)

Wound Arm:
[REQ]
resource(self, AP, 9)
inRange(self, target, 1)
[RES]
modifyResource(self, AP, -9)
[HIT]
calcHit(self, target, "Physical", modifier=-10)
[ACT]
addStatus(target, "Wound Arm", duration=3, hit=hit)

Combo Attack:
[REQ]
resource(self, AP, 6)
inRange(self, target, 1)
[RES]
modifyResource(self, AP, -6)
[COND]
numberOfStackedStatus(self, "Combo Attack")
[HIT]
calcHit(self, target, "Physical", modifier=((stack) - 2), critMod=stack)
[ACT]
weaponAttack(self, target, hit, overallDamageMod=1.1, criticalDamageMod=( 1 + (3 * stack/100) ))
addStatus(self, "Combo Attack", duration=1, overwrite=False)  

Rush:
[MOD]
usingArmor(self, "Heavy")
# Save value as armorMod, 1 if True, 0 if False.
[REQ]
resource(self, AP, 7, modifier=armorMod)
canReach(self, target, self.movementTiles)
!onCooldown(self, "Rush")
[RES]
modifyResource(self, AP, 7, modifier=armorMod)
applyCooldown(self, "Rush", 3)
[ACT]
movePlayer(self, target)
[COND]
facingMeleeEnemy(self)
[HIT]
calcHit(self, enemy, "Physical")
[ACT]
weaponAttack(self, enemy, hit, overallDamageMod=1.2)
[COND]
usingArmor(self, "Heavy")
modifyResource(enemy, HP, 0 - calcDamage(self, target, min=(self.totalDR * 0.4), max=(self.totalDR * 0.4), element=Bludgeoning, hitType=hit))

// Ranger Skills

Expert Notch:
[REQ]
resource(self, AP, 7)
inRange(self, target, self.weaponRange)
usingWeapon(self, "Bow")
[RES]
modifyResource(self, AP -7)
[HIT]
calcHit(self, target, "Physical", modifier=6)
[ACT]
weaponAttack(self, target, hit)

Trap Shrapnel:
[REQ]
resource(self, AP, 5)
!onCooldown(self, "Trap Shrapnel")
[RES]
modifyResource(self, AP, -5)
applyCooldown(self, "Trap Shrapnel", 1)
[ACT]
removeTrap(self.location)
addTerrainStatus("Trap Shrapnel", duration=0, self.location, minDamage=scale(5, 0.014, Cunning), maxDamage=scale(12, 0.014, Cunning), trapRating=scale(13, 0.015, Cunning)) 

Tunnel Vision:
[REQ]
resource(self, AP, 10)
!onCooldown(self, "Tunnel Vision")
[RES]
modifyResource(self, AP -10)
applyCooldown(self, "Tunnel Vision", 5)
[ACT]
addStatus(self, "Tunnel Vision", duration=4)

Trap Sticky:
[REQ]
resource(self, AP, 3)
!onCooldown(self, "Trap Sticky")
[RES]
modifyResource(self, AP, -3)
applyCooldown(self, "Trap Sticky", 1)
[ACT]
removeTrap(self.location)
addTerrainStatus("Trap Sticky", duration=0, location=self.location, trapRating=scale(20, 0.007, Cunning))

Balm:
[REQ]
resource(self, AP, 6)
!onCooldown(self, "Balm")
[RES]
modifyResource(self, AP, -6)
applyCooldown(self, "Balm", 2)
[ACT]
modifyResource(self, HP, (self.maxHP * 0.05)) 

Rapid Reload:
[REQ]
resource(self, AP, 3)
inRange(self, target, self.weaponRange)
weaponEquipped(self, "Crossbow")
[RES]
modifyResource(self, AP, -3)
[HIT]
calcHit(self, target, "Physical", modifier=-8)
[ACT]
weaponAttack(self, target, hit)

Ranger's Aim:
[REQ]
resource(self, AP, 2)
!onCooldown(self, "Ranger's Aim")
[RES]
modifyResource(self, AP, -2)
applyCooldown(self, "Ranger's Aim", 1)
[ACT]
addStatus(self, "Ranger's Aim", duration=1)

Trap Boulder-Pit:
[REQ]
resource(self, AP, 5)
!onCooldown(self, "Trap Boulder-Pit")
[RES]
modifyResource(self, AP, -5)
applyCooldown(self, "Trap Boulder-Pit", 1)
[ACT]
removeTrap(self.location)
addTerrainStatus("Trap Boulder-Pit", duration=0, location=self.location, minDamage=scale(3, 0.02, Cunning), maxDamage=scale(8, 0.02, Cunning), element="Bludgeoning", trapRating=scale(25, 0.006, Cunning))

Defensive Slash:
[REQ]
resource(self, AP, 10)
inRange(self, target, 1)
[RES]
modifyResource(self, AP, -10)
[HIT]
calcHit(self, target, "Physical", modifier=-3)
[ACT]
weaponAttack(self, target, hit, overallDamageMod=0.75)
addStatus(self, "Defensive Slash", duration=2, hit=hit)

Double-Shot:
[REQ]
resource(self, AP, 7)
inRange(self, target, self.weaponRange)
!onCooldown(self, "Double-Shot")
[RES]
modifyResource(self, AP, -7)
applyCooldown(self, "Double-Shot", 1)
[HIT]
calcHit(self, target, "Physical", critMod=(0-self.totalCritChance)
[ACT]
weaponAttack(self, target, hit, overallDamageMod=1.05)
[HIT]
calcHit(self, target, "Physical", critMod=(0-self.totalCritChance)
[ACT]
weaponAttack(self, target, hit, overallDamageMod=1.05)

Trap Tar:
[REQ]
resource(self, AP, 5)
!onCooldown(self, "Trap Tar")
[RES]
modifyResource(self, AP, -5)
applyCooldown(self, "Trap Tar", 1)
[ACT]
removeTrap(self.location)
addTerrainStatus("Trap Tar", duration=0, location=self.location, trapRating=scale(30, 0.005, Cunning))

// Wizard Skills

Magic Guard:
[REQ]
resource(self, AP, 3)
[RES]
modifyResource(self, AP, -3)
[ACT]
addStatus(self, "Magic Guard", duration=1)
endTurn(self)

Gather:
[REQ]
resource(self, AP, 7)
[RES]
modifyResource(self, AP, -7)
[ACT]
addStatus(self, "Gather", duration=1)

#Apply Salve:
#[REQ]
#resource(self, AP, 7)
#!onCooldown(self, "Apply Salve")
#inRange(self, target, 1)
# // Has Potion??? TODO
#[RES]
#modifyResource(self, AP, -7)
#applyCooldown(self, "Apply Salve", 1)
#[ACT]
# todo!
#

Spell Sight:
[REQ]
resource(self, AP, 3)
!onCooldown(self, "Spell Sight")
[RES]
modifyResource(self, AP, -3)
applyCooldown(self, "Spell Sight", 2)
[ACT]
addStatus(self, "Spell Sight", duration=0)

Runic Dust:
[REQ]
resource(self, AP, 5)
inRange(self, target, 1)
!onCooldown(self, "Runic Dust")
[RES]
modifyResource(self, AP, -5)
applyCooldown(self, "Runic Dust", 1)
[ACT]
addStatus(target, "Runic Dust", duration=3, magnitude=(2 + self.level))

Befuddle:
[REQ]
resource(self, AP, 12)
inRange(self, target, 3)
!onCooldown(self, "Befuddle")
[RES]
modifyResource(self, AP, -12)
applyCooldown(self, "Befuddle", 4)
[ACT]
modifyThreat(self, target, 0.7)
addStatus(target, "Stun", duration=1, chance=RARE)

// Thief Skills

Stealth:
[REQ]
resource(self, AP, 7)
!onCooldown(self, "Stealth")
!stealthed(self)
[RES]
modifyResource(self, AP, -7)
applyCooldown(self, "Stealth", 3)
[ACT]
addStatus(self, "Stealth", duration=0)

Backstab:
[REQ]
resource(self, AP, 10)
!onCooldown(self, "Backstab")
stealthed(self)
inRange(self, target, self.weaponRange)
backstabPosition(self, target, rangedBackstab=isClass(self, "Assassin"))
usingWeapon(self, "Sword") || usingWeapon(self, "Knife") || (isClass(self, "Assassin") && usingWeapon(self, "Bow"))
[RES]
modifyResource(self, AP, -10)
applyCooldown(self, "Backstab", 2)
[COND]
!dualWielding(self)
# Save value as dual, 1 for True, 0 for False
usingWeapon(self, "Sword")
# Save value as sword, 1 for True, 0 for False
[HIT]
calcHit(self, target, modifier=(dual * (5 + (4 * sword))), critMod=(50 - (sword * 25)))
[ACT]
weaponAttack(self, target, hit, criticalDamageMod=(2 - (0.5 * sword)))

Swipe Potion:
[REQ]
resource(self, AP, 3)
inRange(self, target, 1)
!onCooldown(self, "Swipe Potion")
hasPotion(target)
[RES]
modifyResource(self, AP, -3)
applyCooldown(self, "Swipe Potion", 2)
[HIT]
rollSuccess( self.totalCunning - target.totalCunning )
[ACT]
stealPotion(self, target)

# Trap disarming mechanics have not been fleshed out.  This needs to be done before this can be encoded. TODO
#Disarm Trap:
#[REQ]
#resource(self, AP, 17)
#inRange(self, target, 1)
#[RES]
#modifyResource(self, AP, -17)
#[HIT]
#rollSuccess(

Hit and Run:
[REQ]
resource(self, AP, 5)
inRange(self, target, 1)
!onCooldown(self, "Hit and Run")
[RES]
modifyResource(self, AP, -5)
applyCooldown(self, "Hit and Run", 2)
[HIT]
calcHit(self, target)
[ACT]
weaponAttack(self, target, hit, noCounter=True)
knockback(target, self, 2, ignoreResistance=True)

Agile Position:
[REQ]
resource(self, AP, 5)
!onCooldown(self, "Agile Position")
[RES]
modifyResource(self, AP, -5)
applyCooldown(self, "Agile Position", 5)
[ACT]
addStatus(self, "Agile Position", duration=1)
endTurn(self)

Feint:
[REQ]
resource(self, AP, 5)
inRange(self, target, 1)
[RES]
modifyResource(self, AP, -5)
[HIT]
rollSuccess(max((self.totalCunning - target.totalCunning) * 8, 72))
[ACT]
addStatus(target, "Feint", duration=2, hit=hit) 

Far-Sighted Focus:
[REQ]
resource(self, AP, 8)
!onCooldown(self, "Far-Sighted Focus")
[RES]
modifyResource(self, AP, -8)
applyCooldown(self, "Far-Sighted Focus", 1)
[ACT]
addStatus(self, "Far-Sighted Focus", duration=3, relativeTarget=target)

All or Nothing:
[REQ]
resource(self, AP, 6)
!onCooldown(self, "All or Nothing")
inRange(self, target, self.weaponRange)
[RES]
modifyResource(self, AP, -6)
applyCooldown(self, "All or Nothing", 2)
[HIT]
calcHit(self, target, modifier=-22, critMod=80)
[ACT]
weaponAttack(self, target, hit, overallDamageMod=1.3)

Redirect:
[REQ]
resource(self, AP, 10)
!onCooldown(self, "Redirect")
inRange(self, target, 5)
[RES]
modifyResource(self, AP, -10)
applyCooldown(self, "Redirect", 3)
[ACT]
modifyThreat(self, target, 0.35)

Dirty Shot:
[REQ]
resource(self, AP, 5)
!onCooldown(self, "Dirty Shot")
inRange(self, target, self.weaponRange)
[RES]
modifyResource(self, AP, -5)
applyCooldown(self, "Dirty Shot", 3)
[HIT]
calcHit(self, target)
[ACT]
weaponAttack(self, target, hit, mightMod=(self.totalCunning / 2))
addStatus(target, "Stun", 1, chance=OCCASIONAL)

Shock Factor:
[REQ]
resource(self, AP, 11)
!onCooldown(self, "Shock Factor")
inRange(self, target, 6)
[RES]
modifyResource(self, AP, -11)
applyCooldown(self, "Shock Factor", 4)
[ACT]
addStatus(target, "Stun", 1, chance=FREQUENT)
addStatus(target, "Shock_Factor_attack_mod", 3, chance=RELIABLE)
addStatus(target, "Shock_Factor_spell_failure", 3, chance=RELIABLE)





