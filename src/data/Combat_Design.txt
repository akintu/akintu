Combat logic design document: Combat_design.txt

----- Player Turn Start -----
* Turn Start Broadcast
* Fill AP
* Set/Reset Timer
* Allow players to move --> Player Turn

----- Player Turn -----
while( AP > minCost, player didn't select "end turn", or timeLeft >0 )
    ~ Player takes an action ::
	    * Player actions blocked until action resolved (including animation)
		* Other player actions queued(blocked?) until action resolved (including animation)
		* If monster or player HP < 0, death only occurs after action is completely resolved.
		* If a queued action references a dead monster, remove it from the queue.
		* If all monsters are dead, cancel all queued actions from other players. --> Victory
        * If this action killed this player, cancel queued actions targeting this player --> Player death (this player only)	
        * If all players are dead --> Reset Overworld Monster		
* continue --> Monster Turn Start
		
----- Monster Turn Start -----
* Turn Start Broadcast
* Monsters take actions (one at a time) according to AI and AP values/cooldowns
* If a player dies as a result of an action --> Player death (target only)
* Monsters run out of sufficient AP to use any available abilities --> Upkeep Phase

----- Upkeep Phase -----
* Perform Recurring status effects (such as Bleeding)
* Status effect durations decrement
* If monsters are all dead --> Victory
* If player dies --> Player death (this player only)
* If all players are dead --> Reset Overworld Monster
* continue --> Player Turn Start

----- Victory -----
* Broadcast a victory message to all players still alive.
* Display EXP earned
* Remove all statuses with a duration > -1
* Restore HP, MP, AP to maximum
* Remove the Monster from the overworld and remove the combat "state"
* Apply EXP, if exp is enough to levelup, display levelup icon/prompt.

----- Player Death -----
* Remove from combat
* If permadeath, display a message, and prompt to create a new character.
* If not permadeath, display a message indicating gold lost and prompt to respawn in town pane.

----- Reset Overworld Monster -----
* Remove the combat "state" from the overworld and return AI to default behavior; restore monster HP/MP


*** Monster Basic Combat AI ***
Get list of abilities usable with remaining AP/MP
Among those abilities, select those with valid targets in current range (Will using checking function).
Use one of those abilities, if possible.
(Select which ability by prioritizing special "attack" use before basic attack use with a 70/30 chance split)
If no such abilities exist, check to see if you have enough AP to move.
Move closer to nearest player (break ties randomly).
Repeat process until insufficent AP/MP exists for movement OR ability use.



**************** MOVE THIS LATER ***********************

@staticmethod
def calcExperienceGain(player, monsterList):
    expGain = 0
	for mon in monsterList:
	    if player.level <= mon.level:
		    expGain += mon.experienceGiven
	    elif player.level <= mon.level - 2:
		    expGain += round(mon.experienceGiven * 0.75)
	    else:
		    expGain += round(mon.experienceGiven * 0.15)
	return expGain
	
@staticmethod
def removeTemporaryStatuses(player):
    removalList = [x for x in player.statusList if x.turnsLeft > -1]
	for removalStatus in removalList:
	    Combat.removeStatus(player, removalStatus)
		
@staticmethod
def refillResources(player):
    player.MP = player.totalMP
	player.HP = player.totalHP
	player.AP = player.totalAP
	
@staticmethod
def softcoreDeath(player):
    goldLoss -= round(player.inventory.gold * 0.1)
	if goldLoss > player.inventory.gold:
	    goldLoss = player.inventory.gold
    # Display message of gold lost TODO
	player.inventory.gold -= goldLoss
	# Transport player to town