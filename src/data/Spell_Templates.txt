
[TAGS]
  [NAME: Arcane Dart]
  [CLASS: Wizard]
  [LEVEL: 1]
  [SPELL_SCHOOL: Mystic]
[/TAGS]
[REQ]
resource(source, "MP", 2)
resource(source, "AP", 5)
inRange(source, target, 8)
[RES]
Combat.modifyresource(source, "MP", -2)
Combat.modifyresource(source, "AP", -5)
[HIT]
Combat.calcHit(source, target, "Magical")
[ACT]
Combat.modifyresource(target, "HP", 0-Combat.calcDamage(source, target, min=2, max=4, element="Arcane", hitValue=hit, critical=1.2, scalesWith="Spellpower", scaleFactor=0.03))

[TAGS]
  [NAME: Arcane Ward]
  [CLASS: Wizard]
  [LEVEL: 1]
  [SPELL_SCHOOL: Mystic]
  [TARGET: None]
[/TAGS]
[REQ]
resource(source, "MP", 7)
resource(source, "AP", 9)
[RES]
Combat.modifyresource(source, "MP", -7)
Combat.modifyresource(source, "AP", -9)
[ACT]
Combat.addStatus(source, "Arcane Ward", duration=Dice.scale(source.totalSpellpower, 3, 0.1, cap=6), magnitude=Dice.scale(source.totalSpellpower, 5, 0.01))

[TAGS]
  [NAME: Mystic Shield]
  [CLASS: Wizard]
  [LEVEL: 1]
  [SPELL_SCHOOL: Mystic]
  [TARGET: None]
[/TAGS]
[REQ]
resource(source, "MP", 15)
resource(source, "AP", 12)
!onCooldown(source, "Mystic Shield")
[RES]
Combat.modifyresource(source, "MP", -15)
Combat.modifyresource(source, "AP", -12)
Combat.applyCooldown(source, "Mystic Shield", 4)
[ACT]
Combat.addStatus(source, "Mystic Shield", duration=5, magnitude=Dice.scale(source.totalSpellpower, 10, 0.06)

[TAGS]
  [NAME: Flicker of Life]
  [CLASS: Wizard]
  [LEVEL: 1]
  [SPELL_SCHOOL: Natural]
  [TARGET: Ally]
[/TAGS]
[REQ]
resource(source, "MP", 15)
resource(source, "AP", 9)
inRange(source, target, 6)
[RES]
Combat.modifyresource(source, "MP", -15)
Combat.modifyresource(source, "AP", -9)
[ACT]
Combat.modifyresource(target, "HP", Dice.scale(source.totalSpellpower, Dice.roll(10, 20), 0.02))

[TAGS]
  [NAME: Stone Guard]
  [CLASS: Wizard]
  [LEVEL: 1]
  [SPELL_SCHOOL: Natural]
  [TARGET: Ally]
[/TAGS]
[REQ]
resource(source, "MP", 15)
resource(source, "AP", 9)
inRange(source, target, 4)
[ACT]
Combat.modifyresource(source, "MP", -15)
Combat.modifyresource(source, "AP", -9)
Combat.addStatus(target, "Stone Guard", duration=Dice.scale(source.totalSpellpower, 4, 0.05, cap=6), magnitude=Dice.scale(source.totalSpellpower, 10, 0.008))

[TAGS]
  [NAME: Singe]
  [CLASS: Wizard]
  [LEVEL: 1]
  [SPELL_SCHOOL: Primal]
[/TAGS]
[REQ]
resource(source, "MP", 6)
resource(source, "AP", 7)
inRange(source, target, 7)
[RES]
Combat.modifyresource(source, "MP", -6)
Combat.modifyresource(source, "AP", -7)
[HIT]
Combat.calcHit(source, target, "Magical")
[ACT]
Combat.modifyresource(target, "HP", 0-Combat.calcDamage(source, target, min=2, max=9, element="Fire", 
                      hitValue=hit, critical=1.2, partial=0.5, scalesWith="Spellpower", scaleFactor=0.05))

[TAGS]
  [NAME: Chill]
  [CLASS: Wizard]
  [LEVEL: 1]
  [SPELL_SCHOOL: Primal]
[/TAGS]
[REQ]
resource(source, "MP", 10)
resource(source, "AP", 6)
inRange(source, target, 6)
[RES]
Combat.modifyresource(source, "MP", -10)
Combat.modifyresource(source, "AP", -6)
[HIT]
Combat.calcHit(source, target, "Magical")
[ACT]
Combat.modifyresource(target, "HP", 0 - Combat.calcDamage(source, target, min=1, max=12, element="Cold", 
                      hitValue=hit, scalesWith="Spellpower", scaleFactor=0.01))
Combat.addStatus(target, "Chill", duration=2, magnitude=Dice.scale(source.totalSpellpower, 5, 0.012), hitValue=hit, chance=Dice.rollPresetChance(source, target, "Frequent"))

[TAGS]
  [NAME: Shock]
  [CLASS: Wizard]
  [LEVEL: 1]
  [SPELL_SCHOOL: Primal]
[/TAGS]
[REQ]
resource(source, "MP", 13)
resource(source, "AP", 7)
inRange(source, target, 2)
!onCooldown(source, "Shock")
[RES]
Combat.modifyresource(source, "MP", -13)
Combat.modifyresource(source, "AP", -6)
Combat.applyCooldown(source, "Shock", 1)
[HIT]
Combat.calcHit(source, target, "Magical")
[ACT]
Combat.modifyresource(target, "HP", 0 - Combat.calcDamage(source, target, min=15, max=22, element="Electric", 
                      hitValue=hit, scalesWith="Spellpower", scaleFactor=0.014))

[TAGS]
  [NAME: Suggest Laziness]
  [CLASS: Wizard]
  [LEVEL: 1]
  [SPELL_SCHOOL: Mental]
[/TAGS]
[REQ]
resource(source, "MP", 5)
resource(source, "AP", 5)
inRange(source, target, 12)
[RES]
Combat.modifyResource(source, MP -5)
Combat.modifyresource(source, "AP", -5)
[HIT]
Combat.calcHit(source, target, "Magical")
[ACT]
Combat.addStatus(target, "Suggest Laziness", duration=1, chance=Dice.rollPresetChance(source, target, "Occasional"), hitValue=hit)

[TAGS]
  [NAME: Stutter]
  [CLASS: Wizard]
  [LEVEL: 1]
  [SPELL_SCHOOL: Mental]
[/TAGS]
[REQ]
resource(source, "MP", 14)
resource(source, "AP", 9)
inRange(source, target, 6)
[RES]
Combat.modifyresource(source, "MP", -14)
Combat.modifyresource(source, "AP", -9)
[HIT]
Combat.calcHit(source, target, "Magical")
[ACT]
Combat.addStatus(target, "Stutter", duration=5, magnitude=Dice.scale(source.totalSpellpower, 5, 0.02))

[TAGS]
  [NAME: Cloud Vision]
  [CLASS: Wizard]
  [LEVEL: 1]
  [SPELL_SCHOOL: Bane]
[/TAGS]
[REQ]
resource(source, "MP", 9)
resource(source, "AP", 9)
inRange(source, target, 6)
[RES]
Combat.modifyresource(source, "MP", -9)
Combat.modifyresource(source, "AP", -9)
[HIT]
Combat.calcHit(source, target, "Magical")
[ACT]
Combat.addStatus(target, "Cloud Vision", Dice.scale(source.totalSpellpower, 5, 0.02), magnitude=Dice.scale(source.totalSpellpower, 5, 0.012), hitValue=hit)
Combat.addStatus(target, "Cloud Vision", Dice.scale(source.totalSpellpower, 5, 0.02), magnitude=Dice.scale(source.totalSpellpower, 2.5, 0.012), hitValue=hit, partial=true)

[TAGS]
  [NAME: Haunt]
  [CLASS: Wizard]
  [LEVEL: 1]
  [SPELL_SCHOOL: Bane]
[/TAGS]
[REQ]
resource(source, "MP", 20)
resource(source, "AP", 11)
inRange(source, target, 5)
!onCooldown(source, "Haunt")
[RES]
Combat.modifyResource(source, MP -20)
Combat.modifyresource(source, "AP", -11)
Combat.applyCooldown(source, "Haunt", 3)
[HIT]
Combat.calcHit(source, target, "Magical")
[ACT]
Combat.modifyresource(target, "HP", 0 - Dice.scale(source.totalSpellpower, Combat.calcDamage(source, target, min=13, max=20, element=Shadow, hitValue=hit), 0.01))
Combat.addStatus(target, "Haunt", Dice.scale(source.totalSpellpower, 3, 0.02, cap = 4), min=2, max=8, applier=source, scalesWith="Spellpower", scaleFactor=0.005, hitValue=hit)

[TAGS]
  [NAME: Zone of Silence]
  [CLASS: Wizard]
  [LEVEL: 1]
  [SPELL_SCHOOL: Illusion]
  [TARGET: Location]
[/TAGS]
[REQ]
resource(source, "MP", 20)
resource(source, "AP", 6)
inRange(source, target, 3)
[RES]
Combat.modifyresource(source, "MP", -20)
Combat.modifyresource(source, "AP", -6)
[ACT]
Terrain.removeTerrainStatus(terrainStatus="Zone of Silence", location=target.location)
Terrain.addTerrainStatus(terrainStatus="Zone of Silence", location=target.location, duration=Dice.scale(source.totalSpellpower, 3, 0.011, cap=6)) 

[TAGS]
  [NAME: Blurry]
  [CLASS: Wizard]
  [LEVEL: 1]
  [SPELL_SCHOOL: Illusion]
  [TARGET: None]
[/TAGS]
[REQ]
resource(source, "MP", 6)
resource(source, "AP", 3)
[RES]
Combat.modifyresource(source, "MP", -6)
Combat.modifyresource(source, "AP", -3)
[ACT]
Combat.addStatus(source, "Blurry", 1, Dice.scale(source.totalSpellpower, 5, 0.02))

[TAGS]
  [NAME: Weapon Enhance]
  [CLASS: Wizard]
  [LEVEL: 1]
  [SPELL_SCHOOL: Enchantment]
  [TARGET: Ally]
[/TAGS]
[REQ]
resource(source, "MP", 9)
resource(source, "AP", 5)
inRange(source, target, 3)
[RES]
Combat.modifyresource(source, "MP", -9)
Combat.modifyresource(source, "AP", -5)
[ACT]
Combat.addStatus(target, "Weapon Enhance", duration=Dice.scale(source.totalSpellpower, 3, 0.03, cap=7), applier=source, scalesWith="Spellpower")

[TAGS]
  [NAME: Flaming Weapon]
  [CLASS: Wizard]
  [LEVEL: 1]
  [SPELL_SCHOOL: Enchantment]
  [TARGET: Ally]
[/TAGS]
[REQ]
resource(source, "MP", 12)
resource(source, "AP", 8)
inRange(source, target, 3)
[RES]
Combat.modifyresource(source, "MP", -12)
Combat.modifyresource(source, "AP", -8)
[ACT]
Combat.addStatus(target, "Flaming Weapon", Dice.scale(source.totalSpellpower, 3, 0.03, cap=7), min=1, max=8, applier=source, scalesWith="Spellpower", scaleFactor=0.01)

[TAGS]
  [NAME: Burst]
  [CLASS: Wizard]
  [LEVEL: 5]
  [SPELL_SCHOOL: Mystic]
  [TARGET: Location]
[/TAGS]
[REQ]
resource(source, "MP", 12)
resource(source, "AP", 9)
inRange(source, target, 8)
!onCooldown(source, "Burst")
[RES]
Combat.modifyResource(source, MP -12)
Combat.modifyresource(source, "AP", -9)
Combat.applyCooldown(source, "Burst", 1)
[HIT]
Combat.calcHit(source, Terrain.getAOETargets(target, radius=1, selectMonsters=True, includeCenter=False), "Magical")
[ACT]
Combat.modifyresource(target, "HP", 0 - Combat.calcDamage(source, target, min=5, max=6, element="Arcane", 
                      hitValue=hit, scalesWith="Spellpower", scaleFactor=0.005))
Combat.knockback(Terrain.getAOETargets(target, radius=1, selectMonsters=True, includeCenter=False), target.location, distance=1)
[HIT]
Combat.calcHit(source, target, "Magical")
[ACT]
Combat.modifyresource(target, "HP", 0 - Combat.calcDamage(source, target, min=10, max=12, element="Arcane", 
                      hitValue=hit, scalesWith="Spellpower", scaleFactor=0.005))

[TAGS]
  [NAME: Identification]
  [CLASS: Wizard]
  [LEVEL: 5]
  [SPELL_SCHOOL: Mystic]
  [TARGET: None]
[/TAGS]
# Needs out of combat use...
[REQ]
resource(source, "MP", 5)
resource(source, "AP", 5)
[RES]
Combat.modifyresource(source, "MP", -5)
Combat.modifyresource(source, "AP", -5)
[ACT]
Combat.addStatus(source, "Identification", 5, 5)

[TAGS]
  [NAME: Hovering Shield]
  [CLASS: Wizard]
  [LEVEL: 5]
  [SPELL_SCHOOL: Mystic]
  [TARGET: None]
[/TAGS]
[REQ]
resource(source, "MP", 8)
resource(source, AP 5)
[RES]
Combat.modifyResource(source, MP -8)
Combat.modifyresource(source, "AP", -5)
[ACT]
Combat.addStatus(source, "Hovering Shield", 5, applier=source, scalesWith="Spellpower", scaleFactor=0.008)

[TAGS]
  [NAME: Fright]
  [CLASS: Wizard]
  [LEVEL: 5]
  [SPELL_SCHOOL: Bane]
[/TAGS]
[REQ]
resource(source, "MP", 6)
resource(source, "AP", 3)
!onCooldown(source, "Fright")
inRange(source, target, 6)
[RES]
Combat.modifyresource(source, "MP", -6)
Combat.modifyresource(source, "AP", -3)
Combat.applyCooldown(source, "Fright", 1)
[HIT]
Combat.calcHit(source, target, "Magical")
[ACT]
Combat.addStatus(target, "Fright", duration=4, hitValue=hit)

[TAGS]
  [NAME: Infection]
  [CLASS: Wizard]
  [LEVEL: 5]
  [SPELL_SCHOOL: Natural]
[/TAGS]
[REQ]
resource(source, "MP", 7)
resource(source, "AP", 6)
inRange(source, target, 1)
[RES]
Combat.modifyresource(source, "MP", -7)
Combat.modifyresource(source, "AP", -6)
[HIT]
Combat.calcHit(source, target, "Magical-Poison", rating=Dice.scale(source.totalSpellpower, 35, 0.012))
[ACT]
Combat.addStatus(target, "Infection", Dice.scale(source.totalSpellpower, 4, 0.013), hitValue=hit, min=7, max=10, applier=source, scalesWith="Spellpower", scaleFactor=0.03)

[TAGS]
  [NAME: Hands of Healing]
  [CLASS: Wizard]
  [LEVEL: 5]
  [SPELL_SCHOOL: Natural]
  [TARGET: Ally]
[/TAGS]
[REQ]
resource(source, "MP", 22)
resource(source, "AP", 8)
!onCooldown(source, "Hands of Healing")
inRange(source, target, 1)
[RES]
Combat.modifyresource(source, "MP", -22)
Combat.modifyresource(source, "AP", -8)
Combat.applyCooldown(source, "Hands of Healing", 1)
[ACT]
Combat.modifyresource(target, "HP", Dice.scale(source.totalSpellpower, Dice.roll(20, 40), 0.02))

[TAGS]
  [NAME: Elemental Boon]
  [CLASS: Wizard]
  [LEVEL: 5]
  [SPELL_SCHOOL: Primal]
  [TARGET: Ally]
[/TAGS]
[REQ]
resource(source, "MP", 8)
resource(source, "AP", 10)
inRange(source, target, 6)
[RES]
Combat.modifyresource(source, "MP", -8)
Combat.modifyresource(source, "AP", -10)
[ACT]
Combat.addStatus(target, "Elemental Boon", duration=Dice.scale(source.totalSpellpower, 6, 0.003, cap=7), 
                 applier=source, scalesWith="Spellpower", scaleFactor=0.007)

[TAGS]
  [NAME: Torrent]
  [CLASS: Wizard]
  [LEVEL: 5]
  [SPELL_SCHOOL: Primal]
[/TAGS]
[REQ]
resource(source, "MP", 25)
resource(source, "AP", 14)
inRange(source, target, 14)
!onCooldown(source, "Torrent")
[RES]
Combat.modifyresource(source, "MP", -25)
Combat.modifyresource(source, "AP", -14)
Combat.applyCooldown(source, "Torrent", 2)
[HIT]
Terrain.getLineTargets(source.location, target.location, selectMonsters=True, selectFirstOnly=True)
Combat.calcHit(source, target, "Magical")
[ACT]
Combat.modifyresource(target, "HP", 0 - Combat.calcDamage(source, target, min=10, max=35, element="Cold", 
                      hitValue=hit, scalesWith="Spellpower", scaleFactor=0.014))
knockback(target, source.location, distance=5, didHit=(isHit(hit, "Normal Hit") and sizeCompare(target, "Huge", smallerThan=True)))

[TAGS]
  [NAME: Lightning Bolt]
  [CLASS: Wizard]
  [LEVEL: 5]
  [SPELL_SCHOOL: Primal]
[/TAGS]
[REQ]
resource(source, "MP", 32)
resource(source, "AP", 8)
inRange(source, target, 6)
!onCooldown(source, "Lightning Bolt")
[RES]
Combat.modifyresource(source, "MP", -32)
Combat.modifyresource(source, "AP", -8)
Combat.applyCooldown(source, "Lightning Bolt", 1)
[HIT]
Terrain.getLineTargets(source.location, target.location, selectMonsters=True, selectFirstOnly=False)
Combat.calcHit(source, targetSet, "Magical")
[ACT]
Combat.modifyresource(target, "HP", 0 - Combat.calcDamage(source, target, min=5, max=33, element="Electric", 
                      hitValue=hit, scalesWith="Spellpower", partial=0.5, critical=1.3, scaleFactor=0.005))
					  
[TAGS]
  [NAME: Suggest Cowardice]
  [CLASS: Wizard]
  [LEVEL: 5]
  [SPELL_SCHOOL: Mental]
[/TAGS]
[REQ]
resource(source, "MP", 9)
resource(source, "AP", 10)
inRange(source, target, 5)
sizeCompare(target, LARGE, smallerThan=True)
[RES]
Combat.modifyResource(source, MP -9)
Combat.modifyresource(source, "AP", -10)
[HIT]
Combat.calcHit(source, target, "Magical")
[ACT]
Combat.addStatus(target, "Suggest Cowardice", duration=1, chance=Dice.rollPresetChance(source, target, "Reliable"), hitValue=hit, partial=True)

[TAGS]
  [NAME: Pit]
  [CLASS: Wizard]
  [LEVEL: 5]
  [SPELL_SCHOOL: Illusion]
  [TARGET: Location]
[/TAGS]
[REQ]
resource(source, "MP", 8)
resource(source, "AP", 5)
inRange(source, target, 5)
!onCooldown(source, "Pit")
[RES]
Combat.modifyresource(source, "MP", -8)
Combat.modifyresource(source, "AP", -5)
Combat.applyCooldown(source, "Pit", 1)
[ACT]
Terrain.removeTerrainStatus(terrainStatus="Pit", location=target, boolean dispelConnectedTiles=False)
Terrain.addTerrainStatus(terrainStatus="Pit", duration=4, location=target)

[TAGS]
  [NAME: Smoke Screen]
  [CLASS: Wizard]
  [LEVEL: 5]
  [SPELL_SCHOOL: Illusion]
  [TARGET: Location]
[/TAGS]
[REQ]
resource(source, "MP", 18)
resource(source, "AP", 6)
inRange(source, target, 4)
!onCooldown(source, "Smoke Screen")
[RES]
Combat.modifyresource(source, "MP", -18)
Combat.modifyResrouce(source, AP, -6)
Combat.applyCooldown(source, "Smoke Screen", 2)
[ACT]
Terrain.removeTerrainStatus(terrainStatus="Smoke Screen", location=target, boolean dispelConnectedTiles=False)
Terrain.addTerrainStatus(terrainStatus="Smoke Screen", duration=Dice.scale(source.totalSpellpower, 2, 0.03, cap=6), location=target)

[TAGS]
  [NAME: Shrink]
  [CLASS: Wizard]
  [LEVEL: 5]
  [SPELL_SCHOOL: Enchantment]
[/TAGS]
[REQ]
resource(source, "MP", 10)
resource(source, "AP", 4)
inRange(source, target, 4)
!onCooldown(source, "Shrink")
sizeCompare(target, SMALL, smallerThan=False)
[RES]
Combat.modifyResource(source, MP -10)
Combat.modifyresource(source, "AP", -4)
Combat.applyCooldown(source, "Shrink", 2)
[ACT]
Combat.addStatus(target, "Shrink", duration=Dice.scale(source.totalSpellpower, 2, 0.025, cap=5), hitValue=hit, partial=True)

[TAGS]
  [NAME: Frost Weapon]
  [CLASS: Wizard]
  [LEVEL: 5]
  [SPELL_SCHOOL: Enchantment]
  [TARGET: Ally]
[/TAGS]
Frost Weapon:
[REQ]
resource(source, "MP", 12)
resource(source, "AP", 8)
inRange(source, target, 3)
[RES]
Combat.modifyresource(source, "MP", -12)
Combat.modifyresource(source, "AP", -8)
[ACT]
Combat.addStatus(target, "Frost Weapon", duration=Dice.scale(source.totalSpellpower, 3, 0.03, cap=7), 
                 min=2, max=5, applier=source, scalesWith="Spellpower", scaleFactor=0.019)

# Fighter Skills

[TAGS]
  [NAME: Mighty Blow]
  [CLASS: Fighter]
  [LEVEL: 1]
[/TAGS]
[REQ]
resource(source, "AP", 9)
inRange(source, target, 1)
usingWeapon(source, "Melee")
[RES]
Combat.modifyresource(source, "AP", -9)
[HIT]
Combat.calcHit(source, target, "Physical", modifier=-5)
[ACT]
Combat.weaponAttack(source, target, hit, forceMod=1.5)

[TAGS]
  [NAME: Brace]
  [CLASS: Fighter]
  [LEVEL: 1]
[/TAGS]
[REQ]
resource(source, "AP", 2)
[RES]
Combat.modifyresource(source, "AP", -2)
[ACT]
Combat.addStatus(source, "Brace", duration=1)
Combat.endTurn(source)

[TAGS]
  [NAME: Dash]
  [CLASS: Fighter]
  [LEVEL: 1]
  [TARGET: Location]
[/TAGS]
[REQ]
resource(source, "AP", 2)
!onCooldown(source, "Dash")
canReach(source, target, source.movementTiles)
[RES]
Combat.modifyresource(source, "AP", -2)
Combat.applyCooldown(source, "Dash", 4)
[ACT]
Combat.movePlayer(source, target)

[TAGS]
  [NAME: Quick Strike]
  [CLASS: Fighter]
  [LEVEL: 2]
[/TAGS]
[REQ]
resource(source, "AP", 3)
inRange(source, target, 1)
usingWeapon(source, "Melee")
[RES]
Combat.modifyresource(source, "AP", -3)
[HIT]
Combat.calcHit(source, target, "Physical", modifier=-10)
[ACT]
Combat.weaponAttack(source, target, hit, forceMod=0.5)

[TAGS]
  [NAME: Precise Blow]
  [CLASS: Fighter]
  [LEVEL: 2]
[/TAGS]
[REQ]
resource(source, "AP", 7)
inRange(source, target, 1)
usingWeapon(source, "Melee")
[RES]
Combat.modifyresource(source, "AP", -7)
[HIT]
Combat.calcHit(source, target, "Physical", modifier=4)
[ACT]
Combat.weaponAttack(source, target, hit)

[TAGS]
  [NAME: Thrust]
  [CLASS: Fighter]
  [LEVEL: 4]
[/TAGS]
[REQ]
resource(source, "AP", 5)
inRange(source, target, 1)
!onCooldown(source, "Thrust")
usingWeapon(source, "Sword")
[RES]
Combat.modifyResource(source, AP -5)
Combat.applyCooldown(source, "Thrust", 1)
[HIT]
Combat.calcHit(source, target, "Physical")
[ACT]
Combat.weaponAttack(source, target, hit, elementOverride="Piercing")

[TAGS]
  [NAME: Clobber]
  [CLASS: Fighter]
  [LEVEL: 4]
[/TAGS]
[REQ]
resource(source, "AP", 10)
inRange(source, target, 1)
usingWeapon(source, "Club")
[RES]
Combat.modifyresource(source, "AP", -10)
[HIT]
Combat.calcHit(source, target, "Physical", modifier=-3)
[ACT]
Combat.weaponAttack(source, target, hit, armorPenetrationMod=5)
Combat.addStatus(target, "Stun", duration=1, chance = (0.2 * sizeCompare(target, LARGE, smallerThan=True)), hitValue=hit)

[TAGS]
  [NAME: Wound Leg]
  [CLASS: Fighter]
  [LEVEL: 6]
[/TAGS]
[REQ]
resource(source, "AP", 9)
inRange(source, target, 1)
usingWeapon(source, "Melee")
[RES]
Combat.modifyresource(source, "AP", -9)
[HIT]
Combat.calcHit(source, target, "Physical", modifier=-10)
[ACT]
Combat.addStatus(target, "Wound Leg", duration=3, hitValue=hit)

[TAGS]
  [NAME: Wound Arm]
  [CLASS: Fighter]
  [LEVEL: 6]
[/TAGS]
Wound Arm:
[REQ]
resource(source, "AP", 9)
inRange(source, target, 1)
usingWeapon(source, "Melee")
[RES]
Combat.modifyresource(source, "AP", -9)
[HIT]
Combat.calcHit(source, target, "Physical", modifier=-10)
[ACT]
Combat.addStatus(target, "Wound Arm", duration=3, hitValue=hit)

[TAGS]
  [NAME: Combo Attack]
  [CLASS: Fighter]
  [LEVEL: 8]
[/TAGS]
[REQ]
resource(source, "AP", 6)
inRange(source, target, 1)
usingWeapon(source, "Melee")
[RES]
Combat.modifyresource(source, "AP", -6)
[HIT]
Combat.calcHit(source, target, "Physical", modifier=(getNumberOfStackedStatus(source, "Combo Attack") - 2), critMod=getNumberOfStackedStatus(source, "Combo Attack"))
[ACT]
Combat.weaponAttack(source, target, hit, overallDamageMod=1.1, criticalDamageMod=( 1 + (3 * getNumberOfStackedStatus(source, "Combo Attack")/100) ))
Combat.addStatus(source, "Combo Attack", duration=1, overwrite=False)  

[TAGS]
  [NAME: Rush]
  [CLASS: Fighter]
  [LEVEL: 8]
  [TARGET: Location]
[/TAGS]
[REQ]
resource(source, "AP", (7 + usingArmor(source, "Heavy")))
canReach(source, target, source.movementTiles)
!onCooldown(source, "Rush")
usingWeapon(source, "Melee")
[RES]
Combat.modifyresource(source, "AP", (-7 - usingArmor(source, "Heavy")))
Combat.applyCooldown(source, "Rush", 3)
[ACT]
Combat.movePlayer(source, target)
[HIT]
Combat.calcHit(source, getMeleeFacingEnemy(source), "Physical")
[ACT]
Combat.weaponAttack(source, getMeleeFacingEnemy(source), hit, overallDamageMod=1.2)
Combat.modifyResource(enemy, HP, 0 - Combat.calcDamage(source, target, min=(source.totalDR * 0.4 * usingArmor("Heavy")),
                      max=(source.totalDR * 0.4 * usingArmor("Heavy")), element="Bludgeoning", hitValue=hit))

# Ranger Abilities
					  
[TAGS]
  [NAME: Expert Notch]
  [CLASS: Ranger]
  [LEVEL: 1]
[/TAGS]					  
[REQ]
resource(source, "AP", 7)
inRange(source, target, source.weaponRange)
usingWeapon(source, "Bow")
[RES]
Combat.modifyResource(source, AP -7)
[HIT]
Combat.calcHit(source, target, "Physical", modifier=6)
[ACT]
Combat.weaponAttack(source, target, hit)

[TAGS]
  [NAME: Shrapnel Trap]
  [CLASS: Ranger*]
  [LEVEL: 1]
  [TARGET: None]
  [REPLACED_BY: Anarchist Shrapnel Trap]
[/TAGS]
[REQ]
resource(source, "AP", 5)
!onCooldown(source, "Shrapnel Trap")
[RES]
Combat.modifyresource(source, "AP", -5)
Combat.applyCooldown(source, "Shrapnel Trap", 1)
[ACT]
Terrain.removeTrap(source.location)
Terrain.addTrap("Shrapnel Trap", source.location, minDamage=Dice.scale(source.totalCunning, 5, 0.014), 
                maxDamage=Dice.scale(source.totalCunning, 12, 0.014), trapRating=Dice.scale(source.totalCunning, 13, 0.015),
				applier=source) 

[TAGS]
  [NAME: Tunnel Vision]
  [CLASS: Ranger]
  [LEVEL: 2]
  [TARGET: None]
[/TAGS]
[REQ]
resource(source, "AP", 10)
!onCooldown(source, "Tunnel Vision")
[RES]
Combat.modifyResource(source, AP -10)
Combat.applyCooldown(source, "Tunnel Vision", 5)
[ACT]
Combat.addStatus(source, "Tunnel Vision", duration=4)

[TAGS]
  [NAME: Sticky Trap]
  [CLASS: Ranger*]
  [LEVEL: 2]
  [TARGET: None]
  [REPLACED_BY: Anarchist Sticky Trap]
[/TAGS]
[REQ]
resource(source, "AP", 3)
!onCooldown(source, "Sticky Trap")
[RES]
Combat.modifyresource(source, "AP", -3)
Combat.applyCooldown(source, "Sticky Trap", 1)
[ACT]
Terrain.removeTrap(source.location)
Terrain.addTrap("Sticky Trap", location=source.location, trapRating=Dice.scale(source.totalCunning, 20, 0.007), applier=source)

[TAGS]
  [NAME: Balm]
  [CLASS: Ranger]
  [LEVEL: 2]
  [TARGET: None]
[/TAGS]
[REQ]
resource(source, "AP", 6)
!onCooldown(source, "Balm")
[RES]
Combat.modifyresource(source, "AP", -6)
Combat.applyCooldown(source, "Balm", 2)
[ACT]
Combat.modifyresource(source, "HP", (source.maxHP * 0.05)) 

[TAGS]
  [NAME: Rapid Reload]
  [CLASS: Ranger]
  [LEVEL: 2]
[/TAGS]
[REQ]
resource(source, "AP", 3)
inRange(source, target, source.weaponRange)
weaponEquipped(source, "Crossbow")
[RES]
Combat.modifyresource(source, "AP", -3)
[HIT]
Combat.calcHit(source, target, "Physical", modifier=-8)
[ACT]
Combat.weaponAttack(source, target, hit)

[TAGS]
  [NAME: Ranger's Aim]
  [CLASS: Ranger]
  [LEVEL: 4]
  [TARGET: None]
[/TAGS]
[REQ]
resource(source, "AP", 2)
!onCooldown(source, "Ranger's Aim")
[RES]
Combat.modifyresource(source, "AP", -2)
Combat.applyCooldown(source, "Ranger's Aim", 1)
[ACT]
Combat.addStatus(source, "Ranger's Aim", duration=1)

[TAGS]
  [NAME: Boulder-Pit Trap]
  [CLASS: Ranger*]
  [LEVEL: 4]
  [TARGET: None]
  [REPLACED_BY: Anarchist Boulder-Pit Trap]
[/TAGS]
[REQ]
resource(source, "AP", 5)
!onCooldown(source, "Boulder-Pit Trap")
[RES]
Combat.modifyresource(source, "AP", -5)
Combat.applyCooldown(source, "Boulder-Pit Trap", 1)
[ACT]
Terrain.removeTrap(source.location)
Terrain.addTrap("Boulder-Pit Trap", location=source.location, minDamage=Dice.scale(source.totalCunning, 3, 0.02), 
                maxDamage=Dice.scale(source.totalCunning, 8, 0.02), trapRating=Dice.scale(source.totalCunning, 25, 0.006), applier=source)

[TAGS]
  [NAME: Defensive Slash]
  [CLASS: Ranger]
  [LEVEL: 6]
[/TAGS]
[REQ]
resource(source, "AP", 10)
inRange(source, target, 1)
usingWeapon(source, "Melee")
[RES]
Combat.modifyresource(source, "AP", -10)
[HIT]
Combat.calcHit(source, target, "Physical", modifier=-3)
[ACT]
Combat.weaponAttack(source, target, hit, overallDamageMod=0.75)
Combat.addStatus(source, "Defensive Slash", duration=2, hitValue=hit)

[TAGS]
  [NAME: Double-Shot]
  [CLASS: Ranger]
  [LEVEL: 6]
[/TAGS]
[REQ]
resource(source, "AP", 7)
inRange(source, target, source.weaponRange)
!onCooldown(source, "Double-Shot")
[RES]
Combat.modifyresource(source, "AP", -7)
Combat.applyCooldown(source, "Double-Shot", 1)
[HIT]
Combat.calcHit(source, target, "Physical", critMod=(0-source.totalCritChance)
[ACT]
Combat.weaponAttack(source, target, hit, overallDamageMod=1.05)
[HIT]
Combat.calcHit(source, target, "Physical", critMod=(0-source.totalCritChance)
[ACT]
Combat.weaponAttack(source, target, hit, overallDamageMod=1.05)

[TAGS]
  [NAME: Tar Trap]
  [CLASS: Ranger*]
  [LEVEL: 8]
  [TARGET: None]
  [REPLACED_BY: Anarchist Tar Trap]
[/TAGS]
[REQ]
resource(source, "AP", 5)
!onCooldown(source, "Tar Trap")
[RES]
Combat.modifyresource(source, "AP", -5)
Combat.applyCooldown(source, "Tar Trap", 1)
[ACT]
Terrain.removeTrap(source.location)
Terrain.addTrap("Tar Trap", location=source.location, trapRating=Dice.scale(source.totalCunning, 30, 0.005), applier=source)

# Wizard Skills

[TAGS]
  [NAME: Magic Guard]
  [CLASS: Wizard]
  [LEVEL: 1]
  [TARGET: None]
[/TAGS]
[REQ]
resource(source, "AP", 3)
[RES]
Combat.modifyresource(source, "AP", -3)
[ACT]
Combat.addStatus(source, "Magic Guard", duration=1)
Combat.endTurn(source)

[TAGS]
  [NAME: Gather]
  [CLASS: Wizard]
  [LEVEL: 2]
  [TARGET: None]
[/TAGS]
[REQ]
resource(source, "AP", 7)
[RES]
Combat.modifyresource(source, "AP", -7)
[ACT]
Combat.addStatus(source, "Gather", duration=1)

[TAGS]
  [NAME: Reverse Hex]
  [CLASS: Wizard]
  [LEVEL: 2]
  [TARGET: Ally]
[/TAGS]
[REQ]
resource(source, "AP", 10)
!onCooldown(source, "Reverse Hex")
inRange(source, target, 1)
[RES]
Combat.modifyresource(source, "AP", -10)
Combat.applyCooldown(source, "Reverse Hex", 5)
[ACT]
Combat.removeStatusOfType(target, "debuff")

[TAGS]
  [NAME: Spell Sight]
  [CLASS: Wizard]
  [LEVEL: 4]
  [TARGET: None]
[/TAGS]
[REQ]
resource(source, "AP", 3)
!onCooldown(source, "Spell Sight")
[RES]
Combat.modifyresource(source, "AP", -3)
Combat.applyCooldown(source, "Spell Sight", 2)
[ACT]
Combat.addStatus(source, "Spell Sight", duration=-1)

[TAGS]
  [NAME: Runic Dust]
  [CLASS: Wizard]
  [LEVEL: 6]
[/TAGS]
[REQ]
resource(source, "AP", 5)
inRange(source, target, 1)
!onCooldown(source, "Runic Dust")
[RES]
Combat.modifyresource(source, "AP", -5)
Combat.applyCooldown(source, "Runic Dust", 1)
[ACT]
Combat.addStatus(target, "Runic Dust", duration=3, magnitude=(2 + source.level))

[TAGS]
  [NAME: Befuddle]
  [CLASS: Wizard]
  [LEVEL: 8]
[/TAGS]
[REQ]
resource(source, "AP", 12)
inRange(source, target, 3)
!onCooldown(source, "Befuddle")
[RES]
Combat.modifyresource(source, "AP", -12)
Combat.applyCooldown(source, "Befuddle", 4)
[ACT]
Combat.modifyThreat(source, target, 0.7)
Combat.addStatus(target, "Stun", duration=1,  chance=Dice.rollPresetChance(source, target, "Rare"))

# Thief Skills

[TAGS]
  [NAME: Stealth]
  [CLASS: Thief]
  [LEVEL: 1]
  [TARGET: None]
  [REPLACED_BY: Conceal]
  [REPLACED_BY: Shadow Walk]
[/TAGS]
[REQ]
resource(source, "AP", 7)
!onCooldown(source, "Stealth")
!inStealth(source)
[RES]
Combat.modifyresource(source, "AP", -7)
Combat.applyCooldown(source, "Stealth", 3)
[ACT]
Combat.addStatus(source, "Stealth", duration=-1)

[TAGS]
  [NAME: Backstab]
  [CLASS: Thief]
  [LEVEL: 1]
  [REPLACED_BY: Bleeding Backstab]
[/TAGS]
[REQ]
resource(source, "AP", 10)
!onCooldown(source, "Backstab")
inStealth(source)
inRange(source, target, source.weaponRange)
inBackstabPosition(source, target, rangedBackstab=isClass(source, "Assassin"))
usingWeapon(source, "Sword") || usingWeapon(source, "Knife") || (isClass(source, "Assassin") && usingWeapon(source, "Bow"))
[RES]
Combat.modifyresource(source, "AP", -10)
Combat.applyCooldown(source, "Backstab", 2)
[HIT]
Combat.calcHit(source, target, "Physical", modifier=((5 + (4 * usingWeapon(source, "Sword"))) * !usingWeaponStyle(source, "Dual")), 
               critMod=(50 - (usingWeapon(source, "Sword") * 25)))
[ACT]
Combat.weaponAttack(source, target, hit, criticalDamageMod=(2 - (0.5 * usingWeapon(source, "Sword"))))

# Needs to be replaced with something else! TODO
[TAGS]
  [NAME: Chain Grasp]
  [CLASS: Thief]
  [LEVEL: 1]
[/TAGS]
[REQ]
resource(source, "AP", 6)
inRange(source, target, 4)
!onCooldown(source, "Chain Grasp")
[RES]
Combat.modifyresource(source, "AP", -6)
Combat.applyCooldown(source, "Chain Grasp", 7)
[HIT]
Dice.rollSuccess(min((source.totalCunning - target.totalCunning) * 9), 90)
[ACT]
Combat.addStatus(target, "Chain Grasp", duration=3, hitValue=hit, chance=sizeCompare(target, "Huge", smallerThan=True))

[TAGS]
  [NAME: Disarm Trap]
  [CLASS: Thief]
  [LEVEL: 2]
  [TARGET: Location]
  [BREAKS_STEALTH: 0]
[/TAGS]
[REQ]
resource(source, "AP", 17)
inRange(source, target, 1)
Terrain.trapOnTile(target)
[RES]
Combat.modifyresource(source, "AP", -17)
[HIT]
Dice.rollSuccess(Dice.max(15 + 5 * (source.level - getTrapAtLocation(target).level) + 2 * (source.totalCunning - getTrapAtLocation(target).trapRating), 95))
[ACT]
Combat.removeTrap(source, getTrapAtLocation(target), isHit(hit, "Normal Hit"))  

[TAGS]
  [NAME: Hit and Run]
  [CLASS: Thief]
  [LEVEL: 2]
[/TAGS]
[REQ]
resource(source, "AP", 5)
inRange(source, target, 1)
!onCooldown(source, "Hit and Run")
usingWeapon(source, "Melee")
[RES]
Combat.modifyresource(source, "AP", -5)
Combat.applyCooldown(source, "Hit and Run", 2)
[HIT]
Combat.calcHit(source, target, "Physical")
[ACT]
Combat.weaponAttack(source, target, hit, noCounter=True)
knockback(source, target.location, 2, ignoreResistance=True)

[TAGS]
  [NAME: Agile Position]
  [CLASS: Thief]
  [LEVEL: 2]
  [BREAKS_STEALTH: 0]
  [TARGET: None]
[/TAGS]
[REQ]
resource(source, "AP", 5)
!onCooldown(source, "Agile Position")
[RES]
Combat.modifyresource(source, "AP", -5)
Combat.applyCooldown(source, "Agile Position", 5)
[ACT]
Combat.addStatus(source, "Agile Position", duration=1)
Combat.endTurn(source)

[TAGS]
  [NAME: Feint]
  [CLASS: Thief]
  [LEVEL: 4]
[/TAGS]
[REQ]
resource(source, "AP", 5)
inRange(source, target, 1)
[RES]
Combat.modifyresource(source, "AP", -5)
[HIT]
Dice.rollSuccess(max((source.totalCunning - target.totalCunning) * 8, 72))
[ACT]
Combat.addStatus(target, "Feint", duration=2, hitValue=hit) 

[TAGS]
  [NAME: Far-Sighted Focus]
  [CLASS: Thief]
  [LEVEL: 4]
  [TARGET: None]
[/TAGS]
[REQ]
resource(source, "AP", 8)
!onCooldown(source, "Far-Sighted Focus")
[RES]
Combat.modifyresource(source, "AP", -8)
Combat.applyCooldown(source, "Far-Sighted Focus", 1)
[ACT]
Combat.addStatus(source, "Far-Sighted Focus", duration=3, relativeTarget=target)

[TAGS]
  [NAME: All or Nothing]
  [CLASS: Thief]
  [LEVEL: 6]
[/TAGS]
[REQ]
resource(source, "AP", 6)
!onCooldown(source, "All or Nothing")
inRange(source, target, source.weaponRange)
[RES]
Combat.modifyresource(source, "AP", -6)
Combat.applyCooldown(source, "All or Nothing", 2)
[HIT]
Combat.calcHit(source, target, "Physical", modifier=-22, critMod=80)
[ACT]
Combat.weaponAttack(source, target, hit, overallDamageMod=1.3)

[TAGS]
  [NAME: Redirect]
  [CLASS: Thief]
  [LEVEL: 6]
  [BREAKS_STEALTH: 0]
[/TAGS]
[REQ]
resource(source, "AP", 10)
!onCooldown(source, "Redirect")
inRange(source, target, 5)
[RES]
Combat.modifyresource(source, "AP", -10)
Combat.applyCooldown(source, "Redirect", 3)
[ACT]
Combat.modifyThreat(source, target, 0.35)

[TAGS]
  [NAME: Dirty Shot]
  [CLASS: Thief]
  [LEVEL: 8]
[/TAGS]
[REQ]
resource(source, "AP", 5)
!onCooldown(source, "Dirty Shot")
inRange(source, target, source.weaponRange)
[RES]
Combat.modifyresource(source, "AP", -5)
Combat.applyCooldown(source, "Dirty Shot", 3)
[HIT]
Combat.calcHit(source, target, "Physical")
[ACT]
Combat.weaponAttack(source, target, hit, mightMod=(source.totalCunning / 2))
Combat.addStatus(target, "Stun", 1, chance=Dice.rollPresetChance(source, target, "Occasional"))

[TAGS]
  [NAME: Shock Factor]
  [CLASS: Thief]
  [LEVEL: 8]
[/TAGS]
[REQ]
resource(source, "AP", 11)
!onCooldown(source, "Shock Factor")
inRange(source, target, 6)
[RES]
Combat.modifyresource(source, "AP", -11)
Combat.applyCooldown(source, "Shock Factor", 4)
[ACT]
Combat.addStatus(target, "Stun", 1,  chance=Dice.rollPresetChance(source, target, "Frequent"))
Combat.addStatus(target, "Shock Factor Attack Penalty", 3,  chance=Dice.rollPresetChance(source, target, "Reliable"))
Combat.addStatus(target, "Shock Factor Spell Failure", 3,  chance=Dice.rollPresetChance(source, target, "Reliable"))

# WeaponMaster Combination Abilities (Active)

[TAGS]
  [NAME: Shield Deflection]
  [CLASS: Weapon Master]
  [LEVEL: 1]
  [TARGET: None]
[/TAGS]
[REQ]
resource(source, "AP", 4)
!onCooldown(source, "Shield Deflection")
usingShield(source, "Heavy")
[RES]
Combat.modifyresource(source, "AP", -4)
Combat.applyCooldown(source, "Shield Deflection", 5)
[ACT]
Combat.addStatus(source, "Shield Deflection", duration=2)

[TAGS]
  [NAME: Shield Bash]
  [CLASS: Weapon Master]
  [LEVEL: 1]
[/TAGS]
[REQ]
resource(source, "AP", 8)
!onCooldown(source, "Shield Bash")
usingShield(source, "Any")
[RES]
Combat.modifyresource(source, "AP", -8)
Combat.applyCooldown(source, "Shield Bash", 3)
[HIT]
Combat.calcHit(source, target, "Physical")
[ACT]
Combat.weaponAttack(source, target, hit, elementOverride="bludgeoning", overallDamageMod=0.3)
Combat.addStatus(target, "Stun", duration=1, chance=chanceFromSize(target, [["Large", 0.3], ["Huge", 0]], defaultChance=0.8)) 

[TAGS]
  [NAME: True Friend]
  [CLASS: Weapon Master]
  [LEVEL: 3]
  [TARGET: None]
[/TAGS]
[REQ]
resource(source, "AP", 10)
[RES]
Combat.modifyresource(source, "AP", -10)
[ACT]
Combat.addStatus(source, "True Friend", duration=1)
Combat.addStatus(Terrain.getAOETargets(source.location, radius=1, selectMonsters=False, includeCenter=False), "True Friend Protection", duration=1, relativeTarget=source)
Combat.endTurn(source)

[TAGS]
  [NAME: Cleave]
  [CLASS: Weapon Master]
  [LEVEL: 6]
[/TAGS]
[REQ]
resource(source, "AP", 8)
[RES]
Combat.modifyresource(source, "AP", -8)
[HIT]
Combat.calcHit(source, Terrain.getConeTargets(source, distance=1, degrees=180, selectMonsters=True), "Physical", modifier=-5)
[ACT]
Combat.weaponAttack(source, targetSet.remove(getMeleeFacingEnemy(source)), hit, overallDamageMod=0.3, ignoreOnHitEffects=True)
Combat.weaponAttack(source, getMeleeFacingEnemy(source), hit, overallDamageMod=(0.8 + 0.2 * usingWeapon(source, "Axe"))

# Dragoon Combination Abilities

[TAGS]
  [NAME: Jump Attack]
  [CLASS: Dragoon]
  [LEVEL: 1]
  [REPLACED_BY: Faster Jump Attack]
[/TAGS]
[REQ]
resource(source, "AP", 15)
usingWeaponStyle(source, "Two-Handed")
inRange(source, target, 6)
!onCooldown(source, "Jump Attack")
hasAdjacentFreeSpace(target)
[RES]
Combat.modifyresource(source, "AP", -15)
Combat.applyCooldown(source, "Jump Attack", 2)
[HIT]
Combat.calcHit(source, target, "Physical")
[ACT]
Combat.movePlayer(source, Terrain.getRandomAdjacentFreeSpace(target), instant=True)
Combat.weaponAttack(source, target, hit, overallDamageMod=2)
Combat.weaponAttack(source, Terrain.getAOETargets(source.location, radius=1, selectMonsters=True), 
                    "Normal Hit", overallDamageMod=0.15, elementOverride="Bludgeoning", ignoreOnHitEffects=True)

[TAGS]
  [NAME: Faster Jump Attack]
  [CLASS: Dragoon]
  [LEVEL: 3]
  [REPLACES: Jump Attack]
  [REPLACED_BY: Faster Jump Attack 2]
[/TAGS]
[REQ]
resource(source, "AP", 14)
usingWeaponStyle(source, "Two-Handed")
inRange(source, target, 6)
!onCooldown(source, "Faster Jump Attack")
hasAdjacentFreeSpace(target)
[RES]
Combat.modifyresource(source, "AP", -14)
Combat.applyCooldown(source, "Faster Jump Attack", 2)
[HIT]
Combat.calcHit(source, target, "Physical")
[ACT]
Combat.movePlayer(source, Terrain.getRandomAdjacentFreeSpace(target), instant=True)
Combat.weaponAttack(source, target, hit, overallDamageMod=2)
Combat.weaponAttack(source, Terrain.getAOETargets(source.location, radius=1, selectMonsters=True), 
                    "Normal Hit", overallDamageMod=0.15, elementOverride="Bludgeoning", ignoreOnHitEffects=True)
	
[TAGS]
  [NAME: Faster Jump Attack 2]
  [CLASS: Dragoon]
  [LEVEL: 4]
  [REPLACES: Faster Jump Attack]
  [REPLACED_BY: Crushing Jump Attack]
[/TAGS]
[REQ]
resource(source, "AP", 14)
usingWeaponStyle(source, "Two-Handed")
inRange(source, target, 6)
!onCooldown(source, "Faster Jump Attack 2")
hasAdjacentFreeSpace(target)
[RES]
Combat.modifyresource(source, "AP", -14)
Combat.applyCooldown(source, "Faster Jump Attack 2", 1)
[HIT]
Combat.calcHit(source, target, "Physical")
[ACT]
Combat.movePlayer(source, Terrain.getRandomAdjacentFreeSpace(target), instant=True)
Combat.weaponAttack(source, target, hit, overallDamageMod=2)
Combat.weaponAttack(source, Terrain.getAOETargets(source.location, radius=1, selectMonsters=True), 
                    "Normal Hit", overallDamageMod=0.15, elementOverride="Bludgeoning", ignoreOnHitEffects=True)
	
[TAGS]
  [NAME: Crushing Jump Attack]
  [CLASS: Dragoon]
  [LEVEL: 5]
  [REPLACES: Faster Jump Attack 2]
  [REPLACED BY: Restful Jump Attack]
[/TAGS]
[REQ]
resource(source, "AP", 14)
usingWeaponStyle(source, "Two-Handed")
inRange(source, target, 6)
!onCooldown(source, "Crushing Jump Attack")
hasAdjacentFreeSpace(target)
[RES]
Combat.modifyresource(source, "AP", -14)
Combat.applyCooldown(source, "Crushing Jump Attack", 1)
[HIT]
Combat.calcHit(source, target, "Physical")
[ACT]
Combat.movePlayer(source, Terrain.getRandomAdjacentFreeSpace(target), instant=True)
Combat.weaponAttack(source, target, hit, overallDamageMod=2.5)
Combat.weaponAttack(source, Terrain.getAOETargets(source.location, radius=1, selectMonsters=True), 
                    "Normal Hit", overallDamageMod=0.2, elementOverride="Bludgeoning", ignoreOnHitEffects=True)
Combat.addStatus(target, "Stun", duration=1, chance=Dice.min(Dice.rollPresetChance(source, target, "Rare"), 
                                                             Dice.chanceFromSize(target, [["Huge", 0]], 1))) 

[TAGS]
  [NAME: Restful Jump Attack]
  [CLASS: Dragoon]
  [LEVEL: 6]
  [REPLACES: Crushing Jump Attack]
[/TAGS]
[REQ]
resource(source, "AP", 14)
usingWeaponStyle(source, "Two-Handed")
inRange(source, target, 6)
!onCooldown(source, "Restful Jump Attack")
hasAdjacentFreeSpace(target)
[RES]
Combat.modifyresource(source, "AP", -14)
Combat.applyCooldown(source, "Restful Jump Attack", 1)
[HIT]
Combat.calcHit(source, target, "Physical")
[ACT]
Combat.movePlayer(source, Terrain.getRandomAdjacentFreeSpace(target), instant=True)
Combat.weaponAttack(source, target, hit, overallDamageMod=2.5)
Combat.weaponAttack(source, Terrain.getAOETargets(source.location, radius=1, selectMonsters=True), 
                    "Normal Hit", overallDamageMod=0.2, elementOverride="Bludgeoning", ignoreOnHitEffects=True)
Combat.addStatus(target, "Stun", duration=1, chance=Dice.min(Dice.rollPresetChance(source, target, "Rare"), 
                                                             Dice.chanceFromSize(target, [["Huge", 0]], 1))) 
Combat.addStatus(source, "Restful Jump Attack", duration=1)
Combat.removeStatusOfType(source, "DR Debuff", removeAll=True)
															 
[TAGS]
  [NAME: Diagonal Thrusts]
  [CLASS: Dragoon]
  [LEVEL: 3]
  [TARGET: None]
[/TAGS]
[REQ]
resource(source, "AP", 11)
usingWeapon(source, "Polearm")
[RES]
Combat.modifyresource(source, "AP", -11)
[HIT]
Terrain.getForwardDiagonalTargets(source.location, selectMonsters=True)
calcHit(source, targetSet, "Physical")
[ACT]
Combat.weaponAttack(source, targetSet, hitSet, forceMod=1.2, criticalDamageMod=1.05)

[TAGS]
  [NAME: Long Reach]
  [CLASS: Dragoon]
  [LEVEL: 4]
[/TAGS]
[REQ]
resource(source, "AP", 7)
usingWeapon(source, "Polearm")
inRange(source, target, 2)
[RES]
Combat.modifyresource(source, "AP", -7)
[HIT]
calcHit(source, target, "Physical")
[ACT]
Combat.weaponAttack(source, target, hit, noCounter=True)

[TAGS]
  [NAME: Spear-Pierce]
  [CLASS: Dragoon]
  [LEVEL: 5]
[/TAGS]
[REQ]
resource(source, "AP", 10)
usingWeapon(source, "Polearm")
inRange(source, target, 1)
[RES]
Combat.modifyresource(source, "AP", -10)
[HIT]
calcHit(source, target, "Physical", modifier=-2)
[ACT]
Combat.weaponAttack(source, target, hit)
Combat.addStatus(target, "Spear-Pierce", duration=3, hitValue=hit, chance=Dice.rollPresetChance(source, target, "Reliable"))

# Barbarian Unique Abilities

[TAGS]
  [NAME: Berserker Rage]
  [CLASS: Barbarian]
  [LEVEL: 1]
  [TARGET: None]
  [REPLACED_BY: Improved Berserker Rage]
[/TAGS]
[REQ]
resource(source, "AP", 8)
!resource(source, "HP", source.totalHP * 0.75)
!onCooldown(source, "Berserker Rage")
[RES]
Combat.modifyresource(source, "AP", -8)
Combat.applyCooldown(source, "Berserker Rage", 5)
[ACT]
Combat.addStatus(source, "Berserker Rage", duration=6)

[TAGS]
  [NAME: Improved Berserker Rage]
  [CLASS: Barbarian]
  [LEVEL: 6]
  [TARGET: None]
  [REPLACES: Berserker Rage]
[/TAGS]
[REQ]
resource(source, "AP", 8)
!resource(source, "HP", source.totalHP * 0.75)
!onCooldown(source, "Improved Berserker Rage")
[RES]
Combat.modifyresource(source, "AP", -8)
Combat.applyCooldown(source, "Improved Berserker Rage", 4)
[ACT]
Combat.addStatus(source, "Improved Berserker Rage", duration=6)

[TAGS]
  [NAME: Sacrificial Strike]
  [CLASS: Barbarian]
  [LEVEL: 2]
[/TAGS]
[REQ]
resource(source, "AP", 5)
resource(source, "HP", source.totalHP * 0.05 + 1)
inRange(source, target, 1)
usingWeapon(source, "Melee")
[RES]
Combat.modifyresource(source, "AP", -5)
Combat.modifyresource(source, "HP", -(source.totalHP * 0.05))
[HIT]
Combat.calcHit(source, target, "Physical", critMod=1)
[ACT]
Combat.weaponAttack(source, target, hit, forceMod=1.5)

[TAGS]
  [NAME: Desperate Strike]
  [CLASS: Barbarian]
  [LEVEL: 3]
[/TAGS]
[REQ]
resource(source, "AP", 12)
!resource(source, "HP", source.totalHP * 0.25)
inRange(source, target, 1)
usingWeapon(source, "Melee")
[RES]
Combat.modifyresource(source, "AP", -12)
[HIT]
Combat.calcHit(source, target, "Physical", modifier=10, critMod=20)
[ACT]
Combat.weaponAttack(source, target, hit, forceMod=2.5, armorPenetrationMod=10)
Combat.addStatus(target, "Stun", duration=1, hitValue=hit, chance=Dice.rollPresetChance(source, target, "Occasional"))

[TAGS]
  [NAME: Blood of the Ancients]
  [CLASS: Barbarian]
  [LEVEL: 4]
  [TARGET: None]
[/TAGS]
[REQ]
resource(source, "AP", 11)
!onCooldown(source, "Blood of the Ancients")
[RES]
modifyresource(source, "AP", -11)
applyCooldown(source, "Blood of the Ancients", 4)
[ACT]
Combat.modifyresource(source, "HP", source.totalHP * 0.15)
Combat.addStatus(source, "Blood of the Ancients", duration=1)

[TAGS]
  [NAME: Crush Armor]
  [CLASS: Barbarian]
  [LEVEL: 5]
[/TAGS]
[REQ]
resource(source, "AP", 8)
inRange(source, target, 1)
usingWeapon(source, "Melee")
!onCooldown(source, "Crush Armor")
[RES]
Combat.modifyresource(source, "AP", -8)
Combat.applyCooldown(source, "Crush Armor", 3)
[HIT]
Combat.calcHit(source, target, "Physical", modifier=(5 * resource(source, "HP", source.totalHP * 0.75 + 1))
[ACT]
Combat.weaponAttack(source, target, hit, overallDamageMod=(0.75 + 0.25 * ((usingWeaponStyle(source, "Dual-Same-Type") || usingWeaponStyle(source, "Two-Handed")) && usingWeapon(source, "Club")))) 
Combat.addStatus(target, "Crush Armor", duration=3, hitValue=hit)

[TAGS]
  [NAME: Guzzle]
  [CLASS: Barbarian]
  [LEVEL: 6]
  [TARGET: None]
[/TAGS]
[REQ]
resource(source, "AP", 1)
!onCooldown(source, "Guzzle")
[RES]
Combat.modifyresource(source, "AP", -1)
Combat.applyCooldown(source, "Guzzle", 2)
[ACT]
Combat.addStatus(source, "Guzzle", duration=1)

# Spellsword Abilities

[TAGS]
  [NAME: Martial Mode]
  [CLASS: Spellsword]
  [LEVEL: 2]
  [TARGET: None]
  [REPLACED_BY: Improved Martial Mode]
[/TAGS]
[REQ]
resource(source, "AP", 1)
!resource(source, "MP", source.totalMP * 0.15)
[RES]
Combat.modifyresource(source, "AP", -1)
[ACT]
Combat.addStatus(source, "Martial Mode", duration=-1)

[TAGS]
  [NAME: Improved Martial Mode]
  [CLASS: Spellsword]
  [LEVEL: 6]
  [TARGET: None]
  [REPLACES: Martial Mode]
[/TAGS]
[REQ]
resource(source, "AP", 1)
!resource(source, "MP", source.totalMP * 0.2)
[RES]
Combat.modifyresource(source, "AP", -1)
[ACT]
Combat.addStatus(source, "Improved Martial Mode", duration=-1)

[TAGS]
  [NAME: Splash Magic]
  [CLASS: Spellsword]
  [LEVEL: 3]
[/TAGS]
[REQ]
resource(source, "AP", 10)
!onCooldown(source, "Splash Magic")
inRange(source, target, 1)
usingWeapon(source, "Melee")
hasWeaponEnchant(source)
[RES]
Combat.modifyresource(source, "AP", -10)
Combat.applyCooldown(source, "Splash Magic", 2)
[HIT]
Combat.calcHit(source, target, "Physical")
[ACT]
Combat.weaponAttack(source, target, hit)
Combat.modifyResource(Terrain.getAOETargets(target.location, radius=1, selectMonsters=True, includeCenter=False), HP, 
                         (0 - Combat.calcDamage(source, Terrain.getAOETargets(target.location, 1, True, False), 
						                        min=Dice.scale(source.totalCunning, 3, 0.33), max=0,
					                            element=AbilityUtils.getSplashMagicAbilityElement(source), hitValue=hit)))						 

[TAGS]
  [NAME: Rebound]
  [CLASS: Spellsword]
  [LEVEL: 5]
  [TARGET: None]
[/TAGS]                             
[REQ]
resource(source, "AP", 4)
[RES]
Combat.modifyresource(source, "AP", -4)
[ACT]
Combat.addStatus(source, "Rebound", duration=3)

# Anarchist Abilities

[TAGS]
  [NAME: Follow up]
  [CLASS: Anarchist]
  [LEVEL: 1]
[/TAGS]
[REQ]
resource(source, "AP", 5)
!onCooldown(source, "Follow up")
inRange(source, target, 1)
usingWeapon(source, "Melee")
hasStatus(target, "Trap Chaos")
[RES]
Combat.modifyresource(source, "AP", -5)
Combat.applyCooldown(source, "Follow up", 1)
[HIT]
Combat.calcHit(source, target, "Physical")
Combat.weaponAttack(source, target, hit)

[TAGS]
  [NAME: Face Shot]
  [CLASS: Anarchist]
  [LEVEL: 1]
[/TAGS]
[REQ]
resource(source, "AP", 9)
inRange(source, target, 1)
usingWeapon(source, "Ranged")
hasStatus(target, "Trap Chaos")
[RES]
Combat.modifyresource(source, "AP", -9)
[HIT]
Combat.calcHit(source, target, "Physical", ignoreMeleeBowPenalty=True, critMod=5)
[ACT]
Combat.weaponAttack(source, target, hit, criticalDamageMod=1.15)

[TAGS]
  [NAME: Anarchist Shrapnel Trap]
  [CLASS: Anarchist]
  [LEVEL: 1]
  [TARGET: Location]
  [REPLACES: Shrapnel Trap]
[/TAGS]
[REQ]
resource(source, "AP", 5)
!onCooldown(source, "Anarchist Shrapnel Trap")
[RES]
Combat.modifyresource(source, "AP", -5)
Combat.applyCooldown(source, "Anarchist Shrapnel Trap", 1)
[ACT]
Terrain.removeTrap(source.location)
Terrain.addTrap("Shrapnel Trap", target.location, minDamage=Dice.scale(source.totalCunning, 5, 0.014), 
                maxDamage=Dice.scale(source.totalCunning, 12, 0.014), trapRating=Dice.scale(source.totalCunning, 13, 0.015),
				applier=source) 
Terrain.detonateTrapChaos(target.location, source) 

[TAGS]
  [NAME: Trap Worry]
  [CLASS: Anarchist]
  [LEVEL: 2]
[/TAGS]
[REQ]
resource(source, "AP", 10)
inRange(source, target, 1)
[RES]
Combat.modifyresource(source, "AP", -10)
[HIT]
Dice.rollSuccess((Dice.max(source.totalCunning - target.totalCunning) * 10 + 20, 80))
[ACT]
Combat.addStatus(target, "Trap Worry", duration=3, hitValue=hit)

[TAGS]
  [NAME: Harmless Grin]
  [CLASS: Anarchist]
  [LEVEL: 2]
[/TAGS]
[REQ]
resource(source, "AP", 5)
inRange(source, target, 1)
[RES]
Combat.modifyresource(source, "AP", -5)
[HIT]
Dice.rollSuccess((Dice.max(source.totalCunning - target.totalCunning) * 10 + 10, 80))
[ACT]
Combat.addStatus(target, "Harmless Grin", duration=3, hitValue=hit)

[TAGS]
  [NAME: Anarchist Sticky Trap]
  [CLASS: Anarchist]
  [LEVEL: 2]
  [TARGET: Location]
  [REPLACES: Sticky Trap]
[/TAGS]
[REQ]
resource(source, "AP", 3)
!onCooldown(source, "Anarchist Sticky Trap")
[RES]
Combat.modifyresource(source, "AP", -3)
Combat.applyCooldown(source, "Anarchist Sticky Trap", 1)
[ACT]
Terrain.removeTrap(source.location)
Terrain.addTrap("Sticky Trap", location=source.location, trapRating=Dice.scale(source.totalCunning, 20, 0.007), applier=source)
Terrain.detonateTrapChaos(target.location, source)

[TAGS]
  [NAME: Explosive Trap]
  [CLASS: Anarchist]
  [LEVEL: 4]
  [TARGET: Location]
[/TAGS]
[REQ]
resource(source, "AP", 5)
!onCooldown(source, "Explosive Trap")
inRange(source, target, 1)
[RES]
Combat.modifyresource(source, "AP", -5)
Combat.applyCooldown(source, "Explosive Trap", 2)
[ACT]
Terrain.removeTrap(target.location)
Terrain.addTrap("Explosive Trap", target.location, minDamage=Dice.scale(source.totalCunning, 5, 0.01), 
                         maxDamage=Dice.scale(source.totalCunning, 10, 0.01), trapRating=Dice.scale(source.totalCunning, 25, 0.01), 
						 splashDamPercent=0.75, splashRadius=1)
Terrain.detonateTrapChaos(target.location, source, reduceDamage=False)

[TAGS]
  [NAME: Anarchist Boulder-Pit Trap]
  [CLASS: Anarchist]
  [LEVEL: 4]
  [TARGET: Location]
  [REPLACES: Boulder-Pit Trap]
[/TAGS]
[REQ]
resource(source, "AP", 5)
!onCooldown(source, "Anarchist Boulder-Pit Trap")
[RES]
Combat.modifyresource(source, "AP", -5)
Combat.applyCooldown(source, "Anarchist Boulder-Pit Trap", 1)
[ACT]
Terrain.removeTrap(source.location)
Terrain.addTrap("Boulder-Pit Trap", location=source.location, minDamage=Dice.scale(source.totalCunning, 3, 0.02), 
                maxDamage=Dice.scale(source.totalCunning, 8, 0.02), trapRating=Dice.scale(source.totalCunning, 25, 0.006), applier=source)
Terrain.detonateTrapChaos(target.location, source)

[TAGS]
  [NAME: Grab Bag]
  [CLASS: Anarchist]
  [LEVEL: 5]
  [TARGET: None]
[/TAGS]
[REQ]
resource(source, "AP", 10)
!onCooldown(source, "Grab Bag")
[RES]
Combat.modifyresource(source, "AP", -10)
Combat.applyCooldown(source, "Grab Bag", 2)
[ACT]
Combat.modifyResource(Terrain.getAOETargets(source.location, radius=1, selectMonsters=True, includeCenter=False), HP, 
                      0-Combat.calcDamage(source, Terrain.getAOETargets(source.location, 1, True, False), scale(source.totalCunning, 2, 0.01), scale(source.totalCunning, 20, 0.01),
					                    element="Piercing", hitValue="Normal Hit"))

[TAGS]
  [NAME: Anarchist Tar Trap]
  [CLASS: Anarchist]
  [LEVEL: 8]
  [TARGET: Location]
[/TAGS]
[REQ]
resource(source, "AP", 5)
!onCooldown(source, "Anarchist Tar Trap")
[RES]
Combat.modifyresource(source, "AP", -5)
Combat.applyCooldown(source, "Anarchist Tar Trap", 1)
[ACT]
Terrain.removeTrap(source.location)
Terrain.addTrap("Tar Trap", location=source.location, trapRating=Dice.scale(source.totalCunning, 30, 0.005), applier=source)
Terrain.detonateTrapChaos(target.location, source)
										
# Marksman Abilities

[TAGS]
  [NAME: Cusp of Escape]
  [CLASS: Marksman]
  [LEVEL: 1]
[/TAGS]
[REQ]
resource(source, "AP", 10)
!onCooldown(source, "Cusp of Escape")
usingWeapon(source, "Ranged")
Terrain.isExactDistanceBetween(source.location, target.location, distance=source.weaponRange)
[RES]
Combat.modifyresource(source, "AP", -10)
Combat.applyCooldown(source, "Cusp of Escape", 1)
[HIT]
Combat.calcHit(source, target, "Physical", modifier=10, critMod=5)
[ACT]
Combat.weaponAttack(source, target, hit)

[TAGS]
  [NAME: Hot Arrow]
  [CLASS: Marksman]
  [LEVEL: 2]
[/TAGS]
[REQ]
resource(source, "AP", 5)
!onCooldown(source, "Hot Arrow")
usingWeapon(source, "Bow") || usingWeapon(source, "Crossbow")
inRange(source, target, source.weaponRange)
[RES]
Combat.modifyresource(source, "AP", -5)
Combat.applyCooldown(source, "Hot Arrow", 1)
[HIT]
Combat.calcHit(source, target, "Physical", modifier=-1)
[ACT]
Combat.weaponAttack(source, target, hit)
Combat.modifyresource(target, "HP", Combat.calcDamage(source, target, min=3, max=0, element="Fire", hitValue=hit))

[TAGS]
  [NAME: Hot Bullet]
  [CLASS: Marksman]
  [LEVEL: 3]
[/TAGS]
[REQ]
resource(source, "AP", 5)
!onCooldown(source, "Hot Bullet")
usingWeapon(source, "Sling")
inRange(source, target, source.weaponRange)
[RES]
Combat.modifyresource(source, "AP", -5)
Combat.applyCooldown(source, "Hot Bullet", 1)
[HIT]
Combat.calcHit(source, target, "Physical")
[ACT]
Combat.weaponAttack(source, target, hit, criticalDamageMod=1.1)
Combat.modifyresource(target, "HP", Combat.calcDamage(source, target, min=8, max=0, element="Fire", hitValue=hit))

[TAGS]
  [NAME: Suppressing Fire]
  [CLASS: Marksman]
  [LEVEL: 4]
  [TARGET: None]
[/TAGS]
[REQ]
resource(source, "AP", 5)
[RES]
Combat.modifyresource(source, "AP", -5)
[ACT]
Combat.addStatus(source, "Suppressing Fire", duration=4)

[TAGS]
  [NAME: Smoking Projectile]
  [CLASS: Marksman]
  [LEVEL: 5]
[/TAGS]
[REQ]
resource(source, "AP", 12)
usingWeapon(source, "Ranged")
inRange(source, target, source.weaponRange)
[RES]
Combat.modifyresource(source, "AP", -12)
[HIT]
Combat.calcHit(source, target, "Physical", modifier=5)
[ACT]
Combat.addStatus(target, "Smoking Projectile", duration=4, min=2, max=10, applier=source, scalesWith="Cunning", scaleFactor=0.01, hitValue=hit)

[TAGS]
  [NAME: Beacon Trap]
  [CLASS: Marksman]
  [LEVEL: 6]
  [TARGET: Location]
[/TAGS]
[REQ]
resource(source, "AP", 5)
!onCooldown(source, "Beacon Trap")
[RES]
Combat.modifyresource(source, "AP", -5)
Combat.applyCooldown(source, "Beacon Trap", 1)
[ACT]
Terrain.removeTrap(source.location)
Terrain.addTrap("Beacon Trap", source.location, trapRating=Dice.scale(source.totalCunning, 27, 0.01), applier=source)

# Druid Abilities

[TAGS]
  [NAME: Deep Wound]
  [CLASS: Druid]
  [LEVEL: 1]
[/TAGS]
[REQ]
resource(source, "AP", 10)
!onCooldown(source, "Deep Wound")
inRange(source, target, source.weaponRange)
[RES]
Combat.modifyresource(source, "AP", -10)
Combat.applyCooldown(source, "Deep Wound", 1)
[HIT]
Combat.calcHit(source, target, "Physical")
[ACT]
Combat.weaponAttack(source, target, hit, poisonRatingMod=5)
Combat.addStatus(target, "Deep Wound", duration=5)

[TAGS]
  [NAME: Painful Shot]
  [CLASS: Druid]
  [LEVEL: 1]
[/TAGS]
[REQ]
resource(source, "AP", 7)
usingWeapon(source, "Ranged")
inRange(source, target, source.weaponRange)
[RES]
Combat.modifyresource(source, "AP", -7)
[HIT]
Combat.calcHit(source, target, "Physical")
[ACT]
Combat.weaponAttack(source, target, hit, criticalDamageMod=1.1)
Combat.addStatus(target, "Painful Shot", duration=5, chance=(Dice.rollPresetChance(source, target, "Occasional") * isHit(hit, "Normal Hit")))

[TAGS]
  [NAME: Poisonous Touch]
  [CLASS: Druid]
  [LEVEL: 2]
[/TAGS]
[REQ]
resource(source, "AP", 5)
!onCooldown(source, "Poisonous Touch")
inRange(source, target, 1)
[RES]
Combat.modifyresource(source, "AP", -5)
Combat.applyCooldown(source, "Poisonous Touch", 3)
[HIT]
Combat.calcHit(source, target, "Physical-Poison", modifier=5, rating=12)
[ACT]
Combat.addStatus(target, "Poisonous Touch", duration=4, min=5, max=15, applier=source, scalesWith="Cunning", scaleFactor=0.07)

[TAGS]
  [NAME: Target Throat]
  [CLASS: Druid]
  [LEVEL: 3]
  [TARGET: None]
[/TAGS]
[REQ]
resource(source, "AP", 8)
!onCooldown(source, "Target Throat")
[RES]
Combat.modifyresource(source, "AP", -8)
Combat.applyCooldown(source, "Target Throat", 6)
[ACT]
Combat.addStatus(source, "Target Throat", duration=4)

[TAGS]
  [NAME: Poison Thorn Trap]
  [CLASS: Druid]
  [LEVEL: 4]
  [TARGET: Location]
[/TAGS]
[REQ]
resource(source, "AP", 5)
!onCooldown(source, "Poison Thorn Trap")
[RES]
Combat.modifyresource(source, "AP", -5)
Combat.applyCooldown(source, "Poison Thorn Trap", 1)
[ACT]
Terrain.removeTrap(source.location)
Terrain.addTrap("Poison Thorn Trap", location=source.location, trapRating=Dice.scale(source.totalCunning, 18, 0.011), minDamage=5, maxDamage=10,
                applier=source)  

[TAGS]
  [NAME: Lethargic Shot]
  [CLASS: Druid]
  [LEVEL: 5]
[/TAGS]
[REQ]
resource(source, "AP", 8)
usingWeapon(source, "Ranged")
inRange(source, target, source.weaponRange)
[RES]
Combat.modifyresource(source, "AP", -8)
[HIT]
Combat.calcHit(source, target, "Physical")
[ACT]
Combat.weaponAttack(source, target, hit, forceMod=1.1)
[HIT]
Combat.calcHit(source, target, "Poison", rating=Dice.scale(source.totalCunning, 25, 0.008))
[ACT]
Combat.addStatus(target, "Lethargic Shot", duration=3, chance=isHit(Combat.calcHit(source, target, "Poison", 
                                                                                   rating=Dice.scale(source.totalCunning, 25, 0.008).isHit("Normal Hit"))))
													
# Tactician Abilities

[TAGS]
  [NAME: Accuracy Favor]
  [CLASS: Tactician]
  [LEVEL: 1]
  [TARGET: Location]
[/TAGS]
[REQ]
resource(source, "AP", 5)
!onCooldown(source, "Accuracy Favor")
[RES]
Combat.modifyresource(source, "AP", -5)
Combat.applyCooldown(source, "Accuracy Favor", 2)
[ACT]
Terrain.removeTrap(source.location)
Terrain.addTrap("Accuracy Favor", location=source.location, charges=3, magnitude=Dice.scale(source.totalCunning, 3, 0.083), applier=source)

[TAGS]
  [NAME: Improved Accuracy Favor]
  [CLASS: Tactician]
  [LEVEL: 6]
  [TARGET: Location]
[/TAGS]
[REQ]
resource(source, "AP", 5)
!onCooldown(source, "Improved Accuracy Favor")
[RES]
Combat.modifyresource(source, "AP", -5)
Combat.applyCooldown(source, "Improved Accuracy Favor", 2)
[ACT]
Terrain.removeTrap(source.location)
Terrain.addTrap("Improved Accuracy Favor", location=source.location, charges=3, magnitude=Dice.scale(source.totalCunning, 3, 0.1), applier=source)

[TAGS]
  [NAME: Mana Favor]
  [CLASS: Tactician]
  [LEVEL: 1]
  [TARGET: Location]
[/TAGS]
[REQ]
resource(source, "AP", 5)
[RES]
Combat.modifyresource(source, "AP", -5)
[ACT]
Terrain.removeTrap(source.location)
Terrain.addTrap("Mana Favor", location=source.location, charges=3, magnitude=Dice.scale(source.totalCunning, 5, 0.033), applier=source)

[TAGS]
  [NAME: Improved Mana Favor]
  [CLASS: Tactician]
  [LEVEL: 6]
  [TARGET: Location]
[/TAGS]
[REQ]
resource(source, "AP", 4)
[RES]
Combat.modifyresource(source, "AP", -4)
[ACT]
Terrain.removeTrap(source.location)
Terrain.addTrap("Mana Favor", location=source.location, charges=4, magnitude=Dice.scale(source.totalCunning, 5, 0.033), applier=source)

[TAGS]
  [NAME: Magical Dampening Trap]
  [CLASS: Tactician]
  [LEVEL: 2]
  [TARGET: Location]
[/TAGS]
[REQ]
resource(source, "AP", 5)
[RES]
Combat.modifyresource(source, "AP", -5)
[ACT]
Terrain.removeTrap(source.location)
Terrain.addTrap("Magical Dampening Trap", location=source.location, magnitude=Dice.scale(source.totalSpellpower, 6, 0.014), 
                trapRating=Dice.scale(source.totalCunning, 30, 0.008), applier=source)

[TAGS]
  [NAME: Nearsighted Trap]
  [CLASS: Tactician]
  [LEVEL: 3]
  [TARGET: Location]
[/TAGS]
[REQ]
resource(source, "AP", 5)
!onCooldown(source, "Nearsighted Trap")
[RES]
Combat.modifyresource(source, "AP", -5)
Combat.applyCooldown(source, "Nearsighted Trap", 1)
[ACT]
Terrain.removeTrap(source.location)
Terrain.addTrap("Nearsighted Trap", location=source.location, trapRating=Dice.scale(source.totalCunning, 30, 0.008), applier=source)

[TAGS]
  [NAME: Mage Hunting]
  [CLASS: Tactician]
  [LEVEL: 4]
  [TARGET: None]
[/TAGS]
[REQ]
resource(source, "AP", 10)
!onCooldown(source, "Mage Hunting")
[RES]
Combat.modifyresource(source, "AP", -10)
Combat.applyCooldown(source, "Mage Hunting", 6)
[ACT]
Combat.addStatus(source, "Mage Hunting", duration=5)

[TAGS]
  [NAME: Mighty Favor]
  [CLASS: Tactician]
  [LEVEL: 5]
  [TARGET: Location]
[/TAGS]
[REQ]
resource(source, "AP", 5)
!onCooldown(source, "Mighty Favor")
[RES]
Combat.modifyresource(source, "AP", -5)
Combat.applyCooldown(source, "Mighty Favor", 2)
[ACT]
Terrain.removeTrap(source.location)
Terrain.addTrap("Mighty Favor", location=source.location, charges=3, magnitude=Dice.scale(source.totalCunning, 6, 0.027), applier=source)

[TAGS]
  [NAME: Improved Mighty Favor]
  [CLASS: Tactician]
  [LEVEL: 5]
  [TARGET: Location]
[/TAGS]
[REQ]
resource(source, "AP", 5)
!onCooldown(source, "Improved Mighty Favor")
[RES]
Combat.modifyresource(source, "AP", -5)
Combat.applyCooldown(source, "Improved Mighty Favor", 1)
[ACT]
Terrain.removeTrap(source.location)
Terrain.addTrap("Mighty Favor", location=source.location, charges=3, magnitude=Dice.scale(source.totalCunning, 6, 0.027), applier=source)

# Nightblade Abilities

[TAGS]
  [NAME: Shadowstep]
  [CLASS: Nightblade]
  [LEVEL: 4]
  [TARGET: Location]
[/TAGS]
[REQ]
resource(source, "AP", 6)
!onCooldown(source, "Shadowstep")
inStealth(source)
canReach(source, target.location, source.moveTiles * 2)
[RES]
Combat.modifyresource(source, "AP", -6)
Combat.applyCooldown(source, "Shadowstep", 2)
[ACT]
Combat.movePlayer(source, target.location)

[TAGS]
  [NAME: Dark Intent]
  [CLASS: Nightblade]
  [LEVEL: 5]
  [TARGET: None]
[/TAGS]
[REQ]
resource(source, "AP", 1)
[RES]
Combat.modifyresource(source, "AP", -1)
[ACT]
Combat.addStatus(source, "Dark Intent", duration=1, magnitude=(3 + Dice.max((source.level - 4) / 2, 0)))

[TAGS]
  [NAME: Seeping Darkness]
  [CLASS: Nightblade]
  [LEVEL: 7]
[/TAGS]
[REQ]
resource(source, "AP", 10)
inRange(source, target, 1)
usingWeapon(source, "Melee")
[RES]
Combat.modifyresource(source, "AP", -10)
[HIT]
Combat.calcHit(source, target, "Physical")
[ACT]
Combat.addStatus(target, "Seeping Darkness", duration=7, hitValue=hit, magnitude=(Combat.weaponAttack(source, target, hit, overallDamageMod=0.5) / 2))

# Shadow Abilities

[TAGS]
  [NAME: Shadow Walk]
  [CLASS: Shadow]
  [LEVEL: 1]
  [TARGET: None]
  [REPLACES: Stealth]
[/TAGS]
[REQ]
resource(source, "AP", 6)
!onCooldown(source, "Shadow Walk")
!inStealth(source)
[RES]
Combat.modifyresource(source, "AP", -6)
Combat.applyCooldown(source, "Shadow Walk", 2)
[ACT]
Combat.addStatus(source, "Shadow Walk", duration=-1)

[TAGS]
  [NAME: Bleeding Backstab]
  [CLASS: Thief]
  [LEVEL: 2]
  [REPLACES: Backstab]
  [REPLACED_BY: Stunning Backstab]
[/TAGS]
[REQ]
resource(source, "AP", 10)
!onCooldown(source, "Bleeding Backstab")
inStealth(source)
inRange(source, target, source.weaponRange)
inBackstabPosition(source, target)
usingWeapon(source, "Sword") || usingWeapon(source, "Knife")
[RES]
Combat.modifyresource(source, "AP", -10)
Combat.applyCooldown(source, "Bleeding Backstab", 2)
[HIT]
Combat.calcHit(source, target, "Physical", modifier=((5 + (4 * usingWeapon(source, "Sword"))) * !usingWeaponStyle(source, "Dual")), 
               critMod=(50 - (usingWeapon(source, "Sword") * 25)))
[ACT]
Combat.weaponAttack(source, target, hit, criticalDamageMod=(2 - (0.5 * usingWeapon(source, "Sword"))))
Combat.addStatus(target, "Bleeding Backstab", duration=2, hitValue=hit)

[TAGS]
  [NAME: Stunning Backstab]
  [CLASS: Thief]
  [LEVEL: 5]
  [REPLACES: Bleeding Backstab]
[/TAGS]
[REQ]
resource(source, "AP", 10)
!onCooldown(source, "Stunning Backstab")
inStealth(source)
inRange(source, target, source.weaponRange)
inBackstabPosition(source, target)
usingWeapon(source, "Sword") || usingWeapon(source, "Knife")
[RES]
Combat.modifyresource(source, "AP", -10)
Combat.applyCooldown(source, "Stunning Backstab", 2)
[HIT]
Combat.calcHit(source, target, "Physical", modifier=((5 + (4 * usingWeapon(source, "Sword"))) * !usingWeaponStyle(source, "Dual")), 
               critMod=(50 - (usingWeapon(source, "Sword") * 25)))
[ACT]
Combat.weaponAttack(source, target, hit, criticalDamageMod=(2 - (0.5 * usingWeapon(source, "Sword"))))
Combat.addStatus(target, "Bleeding Backstab", duration=2, hitValue=hit)
Combat.addStatus(target, "Stun", duration=1, hitValue=hit, 
                 chance=Dice.max(Dice.rollPresetChance(source, target, "Occasional"), Dice.chanceFromSize(target, [["Small", 0.25]], 0)))

[TAGS]
  [NAME: Rear Assault]
  [CLASS: Shadow]
  [LEVEL: 3]
[/TAGS]
[REQ]
resource(source, "AP", 9)
!onCooldown(source, "Rear Assault")
!inStealth(source)
inBackstabPosition(source, target)
usingWeapon(source, "Sword") || usingWeapon(source, "Knife")
[RES]
Combat.modifyresource(source, "AP", -9)
Combat.applyCooldown(source, "Rear Assault", 1)
[HIT]
Combat.calcHit(source, target, "Physical", modifier=-14, critMod=(50 - (usingWeapon(source, "Sword") * 25)))
[ACT]
Combat.weaponAttack(source, target, hit, criticalDamageMod=(2 - 0.5 * usingWeapon(source, "Sword")))

[TAGS]
  [NAME: Quick with a Crossbow]
  [CLASS: Shadow]
  [LEVEL: 3]
[/TAGS]
[REQ]
resource(source, "AP", 4)
!onCooldown(source, "Quick with a Crossbow")
usingWeapon(source, "Crossbow")
inRange(source, target, source.weaponRange)
[RES]
Combat.modifyresource(source, "AP", -4)
Combat.applyCooldown(source, "Quick with a Crossbow", 1)
[HIT]
Combat.calcHit(source, target, "Physical", modifier=1, critMod=1)
[ACT]
Combat.weaponAttack(source, target, hit)

[TAGS]
  [NAME: Stealth Recovery]
  [CLASS: Shadow]
  [LEVEL: 4]
  [TARGET: None]
  [BREAKS_STEALTH: 0]
[/TAGS]
[REQ]
resource(source, "AP", 2)
!onCooldown(source, "Stealth Recovery")
inStealth(source)
[RES]
Combat.modifyResource, AP, -2)
Combat.applyCooldown(source, "Stealth Recovery", 3)
[ACT]
Combat.modifyresource(source, "HP", source.totalHP * 0.03)

[TAGS]
  [NAME: Sudden Flurry]
  [CLASS: Shadow]
  [LEVEL: 6]
[/TAGS]
[REQ]
resource(source, "AP", 6)
usingWeapon(source, "Melee")
inRange(source, target, 1)
[RES]
Combat.modifyresource(source, "AP", -6)
[HIT]
Combat.calcHit(source, target, "Physical", modifier=-4, critMod=(15 * Dice.max(hasStatus(source, "Stealthy Sudden Flurry"), inStealth(source))))
[ACT]
Combat.addStatus(source, "Stealthy Sudden Flurry", duration=1, chance=inStealth(source))
Combat.weaponAttack(source, target, hit, overallDamageMod=(0.85 + 0.4 * hasStatus(source, "Sudden Flurry")))
Combat.addStatus(source, "Sudden Flurry", duration=1)
Combat.addStatus(target, "Sudden Flurry Surprise", duration=1, chance=Dice.chanceFromSize(target, [["Small", 0.85], ["Huge", 0.05]], 
                                                                                        defaultChance=Dice.rollPresetChance(source, target, "Occasional")))

# Assassin Abilities

[TAGS]
  [NAME: Hidden Shot]
  [CLASS: Assassin]
  [LEVEL: 1]
  [BREAKS_STEALTH: 5]
[/TAGS]
[REQ]
resource(source, "AP", 5)
usingWeapon(source, "Ranged")
inRange(source, target, source.weaponRange)
inStealth(source)
!onCooldown(source, "Hidden Shot")
[RES]
Combat.modifyresource(source, "AP", -5)
Combat.applyCooldown(source, "Hidden Shot", 2)
[HIT]
Combat.calcHit(source, target, "Physical")
[ACT]
Combat.weaponAttack(source, target, hit, criticalDamageMod=1.1)

[TAGS]
  [NAME: Visible Attack]
  [CLASS: Assassin]
  [LEVEL: 2]
[/TAGS]
[REQ]
resource(source, "AP", 5)
inRange(source, target, source.weaponRange)
!inStealth(source)
!onCooldown(source, "Visible Attack")
[RES]
Combat.modifyresource(source, "AP", -5)
Combat.applyCooldown(source, "Visible Attack", 2)
[HIT]
Combat.calcHit(source, target, "Physical", modifier=3)
[ACT]
Combat.weaponAttack(source, target, hit)

[TAGS]
  [NAME: Sneaky Sneaky]
  [CLASS: Assassin]
  [LEVEL: 2]
  [BREAKS_STEALTH: 0]
  [TARGET: None]
[/TAGS]
[REQ]
resource(source, "AP", 8)
!onCooldown(source, "Sneaky Sneaky")
inStealth(source)
[RES]
Combat.modifyresource(source, "AP", -8)
Combat.applyCooldown(source, "Sneaky Sneaky", 3)
[ACT]
Combat.addStatus(source, "Sneaky Sneaky", duraiton=4)

[TAGS]
  [NAME: Cautious Shot]
  [CLASS: Assassin]
  [LEVEL: 2]
  [BREAKS_STEALTH: 2]
[/TAGS]
[REQ]
resource(source, "AP", 6)
!onCooldown(source, "Cautious Shot")
usingWeapon(soure, "Ranged")
inStealth(source)
inRange(source, target, source.weaponRange)
[RES]
Combat.modifyresource(source, "AP", -6)
Combat.applyCooldown(source, "Cautious Shot", 1)
[HIT]
Combat.calcHit(source, target, "Physical")
[ACT]
Combat.weaponAttack(source, target, hit, overallDamageMod=0.5)

[TAGS]
  [NAME: Massive Shot]
  [CLASS: Assassin]
  [LEVEL: 3]
[/TAGS]
[REQ]
resource(source, "AP", 20)
!onCooldown(source, "Massive Shot")
usingWeapon(source, "Ranged")
inRange(source, target, source.weaponRange)
inStealth(source)
[RES]
Combat.modifyresource(source, "AP", -20)
Combat.applyCooldown(source, "Massive Shot", 4)
[HIT]
Combat.calcHit(source, target, "Physical", modifier=2)
[ACT]
Combat.weaponAttack(source, target, hit, forceMod=1.3, criticalDamageMod=4.5)
Combat.addStatus(source, "Massive Shot", duration=8, overwrite=False)

[TAGS]
  [NAME: Risky Shot]
  [CLASS: Assassin]
  [LEVEL: 5]
  [BREAKS_STEALTH: 20]
[/TAGS]
[REQ]
resource(source, "AP", 6)
!onCooldown(source, "Risky Shot")
usingWeapon(source, "Ranged")
inRange(source, target, source.weaponRange)
inStealth(source)
[RES]
Combat.modifyresource(source, "AP", -6)
Combat.applyCooldown(source, "Risky Shot", 2)
[HIT]
Combat.calcHit(source, target, "Physical", critMod=15)
[ACT]
Combat.weaponAttack(source, target, hit)
Combat.addStatus(target, "Risky Shot", duration=5, critical=True, hitValue=hit)

# Ninja Abilities

[TAGS]
  [NAME: Conceal]
  [CLASS: Ninja]
  [LEVEL: 1]
  [REAPLACES: Stealth]
  [TARGET: None]
[/TAGS]
[REQ]
resource(source, "AP", 11)
!inStealth(source)
[RES]
Combat.modifyresource(source, "AP", -11)
[ACT]
Combat.addStatus(source, "Conceal", duration=-1)

[TAGS]
  [NAME: Blind Strike]
  [CLASS: Ninja]
  [LEVEL: 2]
  [BREAKS_STEALTH: 0]
[/TAGS]
[REQ]
resource(source, "AP", 5)
inStealth(source)
usingWeapon(source, "Melee")
inRange(source, target, 1)
!onCooldown(source, "Blind Strike")
[RES]
Combat.modifyresource(source, "AP", -5)
Combat.applyCooldown(source, "Blind Strike", 1)
[HIT]
Combat.calcHit(source, target, "Physical")
[ACT]
Combat.weaponAttack(source, target, hit, overallDamageMod=1.2)

[TAGS]
  [NAME: Pin]
  [CLASS: Ninja]
  [LEVEL: 2]
[/TAGS]
[REQ]
resource(source, "AP", 3)
usingWeapon(source, "Ranged")
inRange(source, target, source.weaponRange)
[RES]
Combat.modifyresource(source, "AP", -3)
[HIT]
Combat.calcHit(source, target, "Physical", modifier=-5)
[ACT]
Combat.weaponAttack(source, target, hit, overallDamageMod=0.3)
Combat.addStatus(target, "Pin", duration=1, chance=Dice.chanceFromSize(target, [["Small", 0.2], ["Medium", 0.2]]))

[TAGS]
  [NAME: Follow-Through]
  [CLASS: Ninja]
  [LEVEL: 3]
[/TAGS]
[REQ]
resource(source, "AP", 8)
usingAnimalStyle(source, "Tiger") || usingAnimalStyle(source, "Panther")
usingWeapon(source, "Melee")
inRange(source, target, 1)
!onCooldown(source, "Follow-through")
[RES]
Combat.modifyresource(source, "AP", -8)
Combat.applyCooldown(source, "Follow-through", 1)
[HIT]
Combat.calcHit(source, target, "Physical")
[ACT]
Combat.weaponAttack(source, target, hit, forceMod=1.4)
Combat.knockback(target, source.location, distance=1, didHit=isHit(hit, "Normal Hit"))

[TAGS]
  [NAME: Bait]
  [CLASS: Ninja]
  [LEVEL: 3]
  [TARGET: None]
[/TAGS]
[REQ]
resource(source, "AP", 7)
usingAnimalStyle(source, "Crane") || usingAnimalStyle(source, "Snake") || usingAnimalStyle(source, "Dragon")
[RES]
Combat.modifyresource(source, "AP", -7)
[ACT]
Combat.addStatus(source, "Bait", duration=1)

[TAGS]
  [NAME: Hidden Slice]
  [CLASS: Ninja]
  [LEVEL: 4]
  [BREAKS_STEALTH: 0]
[/TAGS]
[REQ]
resource(source, "AP", 5)
usingWeapon(source, "Sword") || usingWeapon(source, "Shuriken") || usingWeapon(source, "Axe")
inRange(source, target, source.weaponRange)
[RES]
Combat.modifyresource(source, "AP", -5)
[HIT]
Combat.calcHit(source, target, "Physical", modifier=1)
[ACT]
Combat.weaponAttack(source, target, hit, overallDamageMod=0.7)

[TAGS]
  [NAME: Urgency Attack]
  [CLASS: Ninja]
  [LEVEL: 4]
[/TAGS]
[REQ]
resource(source, "AP", 9)
usingAnimalStyle(source, "Panther") || usingAnimalStyle(source, "Dragon")
!resource(source, "HP", source.totalHP * 0.6)
usingWeapon(source, "Melee")
inRange(source, target, 1)
[RES]
Combat.modifyresource(source, "AP", -9)
[HIT]
Combat.calcHit(source, target, "Physical", modifier=-2)
[ACT]
Combat.weaponAttack(source, target, hit, overallDamageMod=2.1)

[TAGS]
  [NAME: Whittle Away]
  [CLASS: Ninja]
  [LEVEL: 5]
[/TAGS]
[REQ]
resource(source, "AP", 10)
usingAnimalStyle(source, "Crane") || usingAnimalStyle(source, "Snake") || usingAnimalStyle(source, "Tiger")
inRange(source, target, source.weaponRange)
[RES]
Combat.modifyresource(source, "AP", -10)
[HIT]
Combat.calcHit(source, target, "Physical", modifier=(3 + (usingAnimalStyle(source, "Crane") || usingAnimalStyle(source, "Snake")) * 2))
[ACT]
Combat.weaponAttack(source, target, hit, overallDamageMod=(0.9 + 0.1 * usingAnimalStyle(source, "Tiger")))
Combat.addStatus(target, "Whittle Away", duration=3, chance=(Dice.rollPresetChance(source, target, "Frequent") || (Dice.chanceFromSize(target, [["Large", 0.05], ["Huge", 0.18]]))))

[TAGS]
  [NAME: Chi Blast]
  [CLASS: Ninja]
  [LEVEL: 6]
[/TAGS]
[REQ]
resource(source, "AP", (15 - usingAnimalStyle(source, "Dragon") * 2))
usingAnimalStyle(source, "Dragon") || usingAnimalStyle(source, "Snake")
inRange(source, target, (3 + usingAnimalStyle(source, "Snake") * 2))
!onCooldown(source, "Chi blast")
[RES]
Combat.modifyresource(source, "AP", (15 - usingAnimalStyle(source, "Dragon") * 2))
Combat.applyCooldown(source, "Chi blast", 4)
[ACT]
Combat.modifyresource(target, "HP", 0 - Combat.calcDamage(source, target, min=20, max=45, element="Holy", hitValue="Normal Hit", scalesWith="Piety", scaleFactor=0.02))

# Battlemage

[TAGS]
  [NAME: Buffer Strike]
  [CLASS: Battlemage]
  [LEVEL: 2]
[/TAGS]
[REQ]
resource(source, "AP", 10)
!onCooldown(source, "Buffer Strike")
usingWeapon(source, "Melee")
inRange(source, target, 1)
[RES]
Combat.modifyresource(source, "AP", -10)
Combat.applyCooldown(source, "Buffer Strike", 3)
[HIT]
Combat.calcHit(source, target, "Physical", modifier=3)
[ACT]
Combat.weaponAttack(source, target, hit)
Combat.addStatus(source, "Buffer Strike", duration=4, magnitude=(10 + source.totalSpellpower / 15), hitValue=hit)

[TAGS]
  [NAME: Inner Might]
  [CLASS: Battlemage]
  [LEVEL: 4]
  [TARGET: None]
[/TAGS]
[REQ]
resource(source, "AP", 4)
resource(source, "MP", source.totalMP * 0.75 + 1) 
!onCooldown(source, "Inner Might")
[RES]
Combat.modifyresource(source, "AP", -4)
Combat.applyCooldown(source, "Inner Might", 4)
[ACT]
Combat.addStatus(source, "Inner Might", duration=2, magnitude=(3 + source.totalSpellpower / 5))

[TAGS]
  [NAME: Deflecting Rod]
  [CLASS: Battlemage]
  [LEVEL: 6]
  [TARGET: None]
[/TAGS]
[REQ]
resource(source, "AP", 6)
usingWeaponStyle(source, "Two-Handed")
usingWeaponStyle(source, "Melee")
!onCooldown(source, "Deflecting Rod")
[RES]
Combat.modifyresource(source, "AP", -6)
Combat.applyCooldown(source, "Deflecting Rod", 4)
[HIT]
Terrain.getAOETargets(source.location, radius=3, selectMonsters=False)
[ACT]
Combat.addStatus(targetSet, "Deflecting Rod", duration=3)

# Arcane Archer

[TAGS]
  [NAME: Arcane Threading]
  [CLASS: Arcane Archer]
  [LEVEL: 1]
  [TARGET: None]
  [REPLACED_BY: Improved Arcane Threading]
[/TAGS]
[REQ]
resource(source, "AP", 1)
[RES]
Combat.modifyresource(source, "AP", -1)
[ACT]
Combat.removeStatusOfType(source, "Threading", removeAll=True)
Combat.addStatus(source, "Arcane Threading", duration=-1)

[TAGS]
  [NAME: Improved Arcane Threading]
  [CLASS: Arcane Archer]
  [LEVEL: 4]
  [TARGET: None]
  [REPLACES: Arcane Threading]
[/TAGS]
[REQ]
resource(source, "AP", 1)
[RES]
Combat.modifyresource(source, "AP", -1)
[ACT]
Combat.removeStatusOfType(source, "Threading", removeAll=True)
Combat.addStatus(source, "Improved Arcane Threading", duration=-1)


[TAGS]
  [NAME: Triple-Charged Arrow]
  [CLASS: Arcane Archer]
  [LEVEL: 3]
[/TAGS]
[REQ]
resource(source, "AP", 5)
!onCooldown(source, "Triple-charged Arrow")
usingWeapon(source, "Ranged")
inRange(source, target, source.weaponRange)
[RES]
Combat.modifyresource(source, "AP", -5)
Combat.applyCooldown(source, "Triple-charged Arrow", 3)
[HIT]
Combat.calcHit(source, target, "Physical")
[ACT]
Combat.weaponAttack(source, target, hit)
Combat.modifyResource(source, "MP", 8)
# Recovers 3 times the mana it otherwise would; the 1x is still supplied via the passive ability.

[TAGS]
  [NAME: Electric Threading]
  [CLASS: Arcane Archer]
  [LEVEL: 4]
  [TARGET: None]
[/TAGS]
[REQ]
resource(source, "AP", 1)
[RES]
Combat.modifyresource(source, "AP", -1)
[ACT]
Combat.removeStatusOfType(source, "Threading", removeAll=True)
Combat.addStatus(source, "Electric Threading", duration=-1)

[TAGS]
  [NAME: Warp Shot]
  [CLASS: Arcane Archer]
  [LEVEL: 5]
[/TAGS]
[REQ]
resource(source, "AP", 10)
!onCooldown(source, "Warp Shot")
usingWeapon(source, "Ranged")
inRange(source, target, source.weaponRange)
[RES]
Combat.modifyresource(source, "AP", -10)
Combat.applyCooldown(source, "Warp Shot", 2)
[HIT]
Combat.calcHit(source, target, "Physical", modifier=-2)
[ACT]
Combat.weaponAttack(source, target, hit)
Combat.addStatus(target, "Warp Shot", duration=2, chance=sizeCompare(target, "Huge", smallerThan=True))
Combat.knockback(target, source.location, distance=1, didHit=(isHit(hit, "Normal Hit") && sizeCompare(target, "Huge", smallerThan=True)))

[TAGS]
  [NAME: Precision Threading]
  [CLASS: Arcane Archer]
  [LEVEL: 6]
  [TARGET: None]
[/TAGS]
[REQ]
resource(source, "AP", 1)
[RES]
Combat.modifyresource(source, "AP", -1)
[ACT]
Combat.removeStatusOfType(source, "Threading", removeAll=True)
Combat.addStatus(source, "Precision Threading", duration=-1)

# Trickster Abilities

[TAGS]
  [NAME: Sidestep]
  [CLASS: Trickster]
  [LEVEL: 1]
  [TARGET: None]
[/TAGS]
[REQ]
resource(source, "AP", 4)
[RES]
Combat.modifyresource(source, "AP", -4)
[ACT]
Combat.addStatus(source, "Sidestep", duration=1)
Combat.endTurn(source)

[TAGS]
  [NAME: Risky Focus]
  [CLASS: Trickster]
  [LEVEL: 2]
  [TARGET: None]
[/TAGS]
[REQ]
resource(source, "AP", 2)
!onCooldown(source, "Risky Focus")
[RES]
Combat.modifyresource(source, "AP", -2)
Combat.applyCooldown(source, "Risky Focus", 1)
[ACT]
Combat.addStatus(source, "Risky Focus", duration=1)

[TAGS]
  [NAME: Weary Bolt]
  [CLASS: Trickster]
  [LEVEL: 3]
[/TAGS]
[REQ]
resource(source, "AP", 5)
usingWeapon("Crossbow")
inRange(source, target, source.weaponRange)
[RES]
Combat.modifyresource(source, "AP", -5)
[HIT]
Combat.calcHit(source, target, "Physical")
[ACT]
Combat.weaponAttack(source, target, hit)
Combat.addStatus(target, "Weary Bolt", duration=3, overwrite=False)

[TAGS]
  [NAME: Curious Drain]
  [CLASS: Trickster]
  [LEVEL: 4]
[/TAGS]
[REQ]
resource(source, "AP", 6)
!onCooldown(source, "Curious Drain")
inRange(source, target, source.weaponRange)
[RES]
Combat.modifyresource(source, "AP", -6)
Combat.applyCooldown(source, "Curious Drain", 1)
[HIT]
Combat.calcHit(source, target, "Physical", modifier=-4)
[ACT]
Combat.weaponAttack(source, target, hit)
Combat.addStatus(source, "Curious Drain", duration=4, hitValue=hit)
Combat.addStatus(target, "Curiously Sluggish", duration=4, hitValue=hit)

[TAGS]
  [NAME: Scar Cut]
  [CLASS: Trickster]
  [LEVEL: 6]
[/TAGS]
[REQ]
resource(source, "AP", 3)
!onCooldown(source, "Scar Cut")
usingWeapon(source, "Melee")
inRange(source, target, 1)
[RES]
Combat.modifyresource(source, "AP", -3)
Combat.applyCooldown(source, "Scar Cut", 1)
[HIT]
Combat.calcHit(source, target, "Physical", modifier=20)
[ACT]
Combat.weaponAttack(source, target, hit, overallDamageMod=0.3)

# Sorceror Abilities

[TAGS]
  [NAME: Guardian of Bronze]
  [CLASS: Sorcerer]
  [LEVEL: 1]
  [TARGET: None]
[/TAGS]
[REQ]
resource(source, "AP", 10)
!onCooldown(source, "Guardian of Bronze")
hasAdjacentFreeSpace(source)
[RES]
Combat.modifyresource(source, "AP", -10)
Combat.applyCooldown(source, "Guardian of Bronze", 9)
[ACT]
Combat.unsummonGuardian(source)
Combat.summonGuardian(source, "Bronze Sword")

[TAGS]
  [NAME: Guardian of Safety]
  [CLASS: Sorcerer]
  [LEVEL: 1]
  [TARGET: None]
[/TAGS]
[REQ]
resource(source, "AP", 12)
!onCooldown(source, "Guardian of Safety")
hasAdjacentFreeSpace(source)
[RES]
Combat.modifyresource(source, "AP", -12)
Combat.applyCooldown(source, "Guardian of Saftey", 5)
[ACT]
Combat.unsummonGuardian(source)
Combat.summonGuardian(source, "Vampiric Dagger")

[TAGS]
  [NAME: Transfer Essence]
  [CLASS: Sorcerer]
  [LEVEL: 2]
  [TARGET: Ally]
[/TAGS]
[REQ]
resource(source, "AP", 3)
resource(source, "HP", 6)
inRange(source, target, 6)
isSummon(target)
!onCooldown(source, "Transfer Essence")
[RES]
Combat.modifyresource(source, "AP", -3)
Combat.modifyresource(source, "HP", -5)
Combat.applyCooldown(source, "Transfer Essence", 2)
[ACT]
Combat.modifyresource(target, "HP", 15)

[TAGS]
  [NAME: Guardian of Jelly]
  [CLASS: Sorcerer]
  [LEVEL: 3]
  [TARGET: None]
[/TAGS]
[REQ]
resource(source, "AP", 10)
!onCooldown(source, "Guardian of Jelly")
hasAdjacentFreeSpace(source)
[RES]
Combat.modifyresource(source, "AP", -10)
Combat.applyCooldown(source, "Guardian of Jelly", 11)
[ACT]
Combat.unsummonGuardian(source)
Combat.summonGuardian(source, "Acidic Jelly")

[TAGS]
  [NAME: Bolster Guardian]
  [CLASS: Sorcerer]
  [LEVEL: 4]
  [TARGET: Ally]
[/TAGS]
[REQ]
resource(source, "AP", 8)
!onCooldown(source, "Bolster Guardian")
inRange(source, target, 6)
isSummon(target)
[RES]
Combat.modifyresource(source, "AP", -8)
Combat.applyCooldown(source, "Bolster Guardian", 4)
[ACT]
Combat.addStatus(target, "Bolster Guardian", duration=5)

[TAGS]
  [NAME: Empathy Shell]
  [CLASS: Sorcerer]
  [LEVEL: 5]
  [TARGET: None]
[/TAGS]
[REQ]
resource(source, "AP", 10)
!onCooldown(source, "Empathy Shell")
hasSummon(source)
[RES]
Combat.modifyresource(source, "AP", -10)
Combat.applyCooldown(source, "Empathy Shell", 6)
[ACT]
Combat.addStatus(source, "Empathy Shell", duration=5)

[TAGS]
  [NAME: Guardian of Stones]
  [CLASS: Sorcerer]
  [LEVEL: 5]
  [TARGET: None]
[/TAGS]
[REQ]
resource(source, "AP", 10)
!onCooldown(source, "Guardian of Stones")
hasAdjacentFreeSpace(source)
[RES]
Combat.modifyresource(source, "AP", -10)
Combat.applyCooldown(source, "Guardian of Stones", 10)
[ACT]
Combat.unsummonGuardian(source)
Combat.summonGuardian(source, "Stone Hurler")

